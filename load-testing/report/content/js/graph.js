/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 55.0, "minX": 0.0, "maxY": 25990.0, "series": [{"data": [[0.0, 443.0], [0.1, 443.0], [0.2, 446.0], [0.3, 453.0], [0.4, 459.0], [0.5, 489.0], [0.6, 497.0], [0.7, 509.0], [0.8, 509.0], [0.9, 554.0], [1.0, 565.0], [1.1, 662.0], [1.2, 681.0], [1.3, 690.0], [1.4, 697.0], [1.5, 697.0], [1.6, 704.0], [1.7, 707.0], [1.8, 710.0], [1.9, 711.0], [2.0, 712.0], [2.1, 713.0], [2.2, 713.0], [2.3, 714.0], [2.4, 716.0], [2.5, 717.0], [2.6, 719.0], [2.7, 726.0], [2.8, 726.0], [2.9, 726.0], [3.0, 733.0], [3.1, 735.0], [3.2, 739.0], [3.3, 740.0], [3.4, 741.0], [3.5, 741.0], [3.6, 741.0], [3.7, 741.0], [3.8, 744.0], [3.9, 750.0], [4.0, 752.0], [4.1, 754.0], [4.2, 755.0], [4.3, 755.0], [4.4, 759.0], [4.5, 760.0], [4.6, 760.0], [4.7, 761.0], [4.8, 763.0], [4.9, 763.0], [5.0, 763.0], [5.1, 765.0], [5.2, 768.0], [5.3, 768.0], [5.4, 772.0], [5.5, 776.0], [5.6, 777.0], [5.7, 779.0], [5.8, 779.0], [5.9, 790.0], [6.0, 794.0], [6.1, 809.0], [6.2, 817.0], [6.3, 818.0], [6.4, 822.0], [6.5, 822.0], [6.6, 825.0], [6.7, 844.0], [6.8, 853.0], [6.9, 861.0], [7.0, 889.0], [7.1, 912.0], [7.2, 912.0], [7.3, 949.0], [7.4, 951.0], [7.5, 984.0], [7.6, 992.0], [7.7, 1013.0], [7.8, 1016.0], [7.9, 1016.0], [8.0, 1023.0], [8.1, 1035.0], [8.2, 1055.0], [8.3, 1061.0], [8.4, 1062.0], [8.5, 1064.0], [8.6, 1064.0], [8.7, 1064.0], [8.8, 1081.0], [8.9, 1084.0], [9.0, 1087.0], [9.1, 1090.0], [9.2, 1119.0], [9.3, 1119.0], [9.4, 1122.0], [9.5, 1128.0], [9.6, 1132.0], [9.7, 1137.0], [9.8, 1143.0], [9.9, 1143.0], [10.0, 1143.0], [10.1, 1147.0], [10.2, 1150.0], [10.3, 1151.0], [10.4, 1164.0], [10.5, 1170.0], [10.6, 1172.0], [10.7, 1172.0], [10.8, 1172.0], [10.9, 1181.0], [11.0, 1184.0], [11.1, 1189.0], [11.2, 1194.0], [11.3, 1198.0], [11.4, 1220.0], [11.5, 1220.0], [11.6, 1220.0], [11.7, 1222.0], [11.8, 1226.0], [11.9, 1230.0], [12.0, 1232.0], [12.1, 1234.0], [12.2, 1234.0], [12.3, 1242.0], [12.4, 1244.0], [12.5, 1246.0], [12.6, 1247.0], [12.7, 1248.0], [12.8, 1250.0], [12.9, 1250.0], [13.0, 1253.0], [13.1, 1255.0], [13.2, 1256.0], [13.3, 1258.0], [13.4, 1259.0], [13.5, 1267.0], [13.6, 1267.0], [13.7, 1267.0], [13.8, 1268.0], [13.9, 1269.0], [14.0, 1274.0], [14.1, 1280.0], [14.2, 1281.0], [14.3, 1281.0], [14.4, 1284.0], [14.5, 1290.0], [14.6, 1294.0], [14.7, 1301.0], [14.8, 1302.0], [14.9, 1308.0], [15.0, 1308.0], [15.1, 1315.0], [15.2, 1335.0], [15.3, 1336.0], [15.4, 1339.0], [15.5, 1343.0], [15.6, 1350.0], [15.7, 1357.0], [15.8, 1357.0], [15.9, 1361.0], [16.0, 1371.0], [16.1, 1372.0], [16.2, 1377.0], [16.3, 1379.0], [16.4, 1383.0], [16.5, 1383.0], [16.6, 1398.0], [16.7, 1403.0], [16.8, 1429.0], [16.9, 1430.0], [17.0, 1451.0], [17.1, 1478.0], [17.2, 1478.0], [17.3, 1480.0], [17.4, 1485.0], [17.5, 1491.0], [17.6, 1493.0], [17.7, 1498.0], [17.8, 1498.0], [17.9, 1498.0], [18.0, 1505.0], [18.1, 1513.0], [18.2, 1519.0], [18.3, 1525.0], [18.4, 1536.0], [18.5, 1539.0], [18.6, 1539.0], [18.7, 1545.0], [18.8, 1545.0], [18.9, 1550.0], [19.0, 1556.0], [19.1, 1557.0], [19.2, 1562.0], [19.3, 1562.0], [19.4, 1577.0], [19.5, 1578.0], [19.6, 1579.0], [19.7, 1589.0], [19.8, 1590.0], [19.9, 1591.0], [20.0, 1602.0], [20.1, 1602.0], [20.2, 1602.0], [20.3, 1610.0], [20.4, 1610.0], [20.5, 1627.0], [20.6, 1629.0], [20.7, 1633.0], [20.8, 1633.0], [20.9, 1639.0], [21.0, 1643.0], [21.1, 1648.0], [21.2, 1649.0], [21.3, 1652.0], [21.4, 1661.0], [21.5, 1661.0], [21.6, 1665.0], [21.7, 1671.0], [21.8, 1674.0], [21.9, 1681.0], [22.0, 1688.0], [22.1, 1688.0], [22.2, 1688.0], [22.3, 1694.0], [22.4, 1699.0], [22.5, 1706.0], [22.6, 1710.0], [22.7, 1713.0], [22.8, 1723.0], [22.9, 1723.0], [23.0, 1723.0], [23.1, 1724.0], [23.2, 1725.0], [23.3, 1725.0], [23.4, 1729.0], [23.5, 1735.0], [23.6, 1735.0], [23.7, 1760.0], [23.8, 1764.0], [23.9, 1765.0], [24.0, 1771.0], [24.1, 1772.0], [24.2, 1776.0], [24.3, 1776.0], [24.4, 1782.0], [24.5, 1796.0], [24.6, 1797.0], [24.7, 1866.0], [24.8, 1889.0], [24.9, 1890.0], [25.0, 1895.0], [25.1, 1895.0], [25.2, 1905.0], [25.3, 1927.0], [25.4, 1935.0], [25.5, 1940.0], [25.6, 1944.0], [25.7, 1948.0], [25.8, 1948.0], [25.9, 1949.0], [26.0, 1957.0], [26.1, 1963.0], [26.2, 1967.0], [26.3, 1968.0], [26.4, 1971.0], [26.5, 1971.0], [26.6, 1987.0], [26.7, 1987.0], [26.8, 1996.0], [26.9, 2013.0], [27.0, 2020.0], [27.1, 2024.0], [27.2, 2024.0], [27.3, 2031.0], [27.4, 2034.0], [27.5, 2037.0], [27.6, 2038.0], [27.7, 2044.0], [27.8, 2047.0], [27.9, 2047.0], [28.0, 2051.0], [28.1, 2053.0], [28.2, 2057.0], [28.3, 2060.0], [28.4, 2070.0], [28.5, 2071.0], [28.6, 2071.0], [28.7, 2077.0], [28.8, 2110.0], [28.9, 2117.0], [29.0, 2128.0], [29.1, 2129.0], [29.2, 2131.0], [29.3, 2131.0], [29.4, 2134.0], [29.5, 2139.0], [29.6, 2142.0], [29.7, 2145.0], [29.8, 2146.0], [29.9, 2179.0], [30.0, 2187.0], [30.1, 2187.0], [30.2, 2192.0], [30.3, 2218.0], [30.4, 2221.0], [30.5, 2225.0], [30.6, 2236.0], [30.7, 2238.0], [30.8, 2238.0], [30.9, 2241.0], [31.0, 2241.0], [31.1, 2253.0], [31.2, 2260.0], [31.3, 2261.0], [31.4, 2272.0], [31.5, 2272.0], [31.6, 2288.0], [31.7, 2296.0], [31.8, 2307.0], [31.9, 2311.0], [32.0, 2318.0], [32.1, 2318.0], [32.2, 2318.0], [32.3, 2337.0], [32.4, 2361.0], [32.5, 2363.0], [32.6, 2367.0], [32.7, 2386.0], [32.8, 2389.0], [32.9, 2389.0], [33.0, 2401.0], [33.1, 2422.0], [33.2, 2431.0], [33.3, 2440.0], [33.4, 2491.0], [33.5, 2494.0], [33.6, 2494.0], [33.7, 2514.0], [33.8, 2514.0], [33.9, 2515.0], [34.0, 2528.0], [34.1, 2531.0], [34.2, 2531.0], [34.3, 2531.0], [34.4, 2534.0], [34.5, 2538.0], [34.6, 2542.0], [34.7, 2543.0], [34.8, 2547.0], [34.9, 2577.0], [35.0, 2593.0], [35.1, 2593.0], [35.2, 2610.0], [35.3, 2650.0], [35.4, 2664.0], [35.5, 2666.0], [35.6, 2676.0], [35.7, 2691.0], [35.8, 2691.0], [35.9, 2694.0], [36.0, 2709.0], [36.1, 2736.0], [36.2, 2746.0], [36.3, 2768.0], [36.4, 2785.0], [36.5, 2785.0], [36.6, 2795.0], [36.7, 2799.0], [36.8, 2809.0], [36.9, 2817.0], [37.0, 2875.0], [37.1, 2904.0], [37.2, 2904.0], [37.3, 2932.0], [37.4, 3032.0], [37.5, 3074.0], [37.6, 3162.0], [37.7, 3169.0], [37.8, 3176.0], [37.9, 3176.0], [38.0, 3186.0], [38.1, 3203.0], [38.2, 3226.0], [38.3, 3228.0], [38.4, 3228.0], [38.5, 3239.0], [38.6, 3239.0], [38.7, 3244.0], [38.8, 3259.0], [38.9, 3261.0], [39.0, 3272.0], [39.1, 3274.0], [39.2, 3333.0], [39.3, 3333.0], [39.4, 3336.0], [39.5, 3339.0], [39.6, 3361.0], [39.7, 3368.0], [39.8, 3377.0], [39.9, 3384.0], [40.0, 3401.0], [40.1, 3401.0], [40.2, 3403.0], [40.3, 3409.0], [40.4, 3411.0], [40.5, 3418.0], [40.6, 3419.0], [40.7, 3445.0], [40.8, 3445.0], [40.9, 3458.0], [41.0, 3466.0], [41.1, 3480.0], [41.2, 3487.0], [41.3, 3496.0], [41.4, 3499.0], [41.5, 3499.0], [41.6, 3503.0], [41.7, 3507.0], [41.8, 3515.0], [41.9, 3522.0], [42.0, 3523.0], [42.1, 3525.0], [42.2, 3525.0], [42.3, 3529.0], [42.4, 3532.0], [42.5, 3535.0], [42.6, 3539.0], [42.7, 3540.0], [42.8, 3551.0], [42.9, 3551.0], [43.0, 3552.0], [43.1, 3554.0], [43.2, 3555.0], [43.3, 3562.0], [43.4, 3567.0], [43.5, 3574.0], [43.6, 3574.0], [43.7, 3597.0], [43.8, 3598.0], [43.9, 3605.0], [44.0, 3608.0], [44.1, 3613.0], [44.2, 3616.0], [44.3, 3616.0], [44.4, 3626.0], [44.5, 3629.0], [44.6, 3636.0], [44.7, 3639.0], [44.8, 3661.0], [44.9, 3679.0], [45.0, 3679.0], [45.1, 3718.0], [45.2, 3719.0], [45.3, 3740.0], [45.4, 3741.0], [45.5, 3755.0], [45.6, 3784.0], [45.7, 3795.0], [45.8, 3795.0], [45.9, 3805.0], [46.0, 3809.0], [46.1, 3833.0], [46.2, 3835.0], [46.3, 3865.0], [46.4, 3873.0], [46.5, 3873.0], [46.6, 3876.0], [46.7, 3878.0], [46.8, 3878.0], [46.9, 3943.0], [47.0, 3971.0], [47.1, 3973.0], [47.2, 3973.0], [47.3, 3986.0], [47.4, 4002.0], [47.5, 4024.0], [47.6, 4030.0], [47.7, 4034.0], [47.8, 4070.0], [47.9, 4070.0], [48.0, 4074.0], [48.1, 4088.0], [48.2, 4104.0], [48.3, 4106.0], [48.4, 4131.0], [48.5, 4145.0], [48.6, 4145.0], [48.7, 4147.0], [48.8, 4163.0], [48.9, 4168.0], [49.0, 4169.0], [49.1, 4177.0], [49.2, 4186.0], [49.3, 4186.0], [49.4, 4205.0], [49.5, 4254.0], [49.6, 4267.0], [49.7, 4273.0], [49.8, 4294.0], [49.9, 4312.0], [50.0, 4312.0], [50.1, 4315.0], [50.2, 4327.0], [50.3, 4341.0], [50.4, 4350.0], [50.5, 4351.0], [50.6, 4356.0], [50.7, 4358.0], [50.8, 4358.0], [50.9, 4360.0], [51.0, 4374.0], [51.1, 4401.0], [51.2, 4406.0], [51.3, 4406.0], [51.4, 4413.0], [51.5, 4413.0], [51.6, 4417.0], [51.7, 4439.0], [51.8, 4445.0], [51.9, 4451.0], [52.0, 4456.0], [52.1, 4460.0], [52.2, 4460.0], [52.3, 4464.0], [52.4, 4491.0], [52.5, 4502.0], [52.6, 4504.0], [52.7, 4515.0], [52.8, 4546.0], [52.9, 4546.0], [53.0, 4572.0], [53.1, 4573.0], [53.2, 4592.0], [53.3, 4595.0], [53.4, 4600.0], [53.5, 4610.0], [53.6, 4610.0], [53.7, 4628.0], [53.8, 4633.0], [53.9, 4635.0], [54.0, 4674.0], [54.1, 4703.0], [54.2, 4703.0], [54.3, 4703.0], [54.4, 4706.0], [54.5, 4741.0], [54.6, 4757.0], [54.7, 4759.0], [54.8, 4798.0], [54.9, 4803.0], [55.0, 4803.0], [55.1, 4812.0], [55.2, 4825.0], [55.3, 4863.0], [55.4, 4887.0], [55.5, 4887.0], [55.6, 4947.0], [55.7, 4950.0], [55.8, 4950.0], [55.9, 4959.0], [56.0, 4978.0], [56.1, 5006.0], [56.2, 5047.0], [56.3, 5049.0], [56.4, 5076.0], [56.5, 5076.0], [56.6, 5080.0], [56.7, 5086.0], [56.8, 5104.0], [56.9, 5105.0], [57.0, 5131.0], [57.1, 5132.0], [57.2, 5132.0], [57.3, 5136.0], [57.4, 5142.0], [57.5, 5145.0], [57.6, 5154.0], [57.7, 5166.0], [57.8, 5181.0], [57.9, 5181.0], [58.0, 5189.0], [58.1, 5206.0], [58.2, 5214.0], [58.3, 5217.0], [58.4, 5244.0], [58.5, 5249.0], [58.6, 5249.0], [58.7, 5255.0], [58.8, 5262.0], [58.9, 5274.0], [59.0, 5277.0], [59.1, 5286.0], [59.2, 5293.0], [59.3, 5293.0], [59.4, 5300.0], [59.5, 5304.0], [59.6, 5308.0], [59.7, 5311.0], [59.8, 5329.0], [59.9, 5329.0], [60.0, 5329.0], [60.1, 5364.0], [60.2, 5377.0], [60.3, 5403.0], [60.4, 5406.0], [60.5, 5406.0], [60.6, 5426.0], [60.7, 5442.0], [60.8, 5442.0], [60.9, 5444.0], [61.0, 5453.0], [61.1, 5459.0], [61.2, 5483.0], [61.3, 5516.0], [61.4, 5521.0], [61.5, 5521.0], [61.6, 5528.0], [61.7, 5544.0], [61.8, 5546.0], [61.9, 5557.0], [62.0, 5589.0], [62.1, 5591.0], [62.2, 5591.0], [62.3, 5631.0], [62.4, 5642.0], [62.5, 5645.0], [62.6, 5675.0], [62.7, 5775.0], [62.8, 5805.0], [62.9, 5805.0], [63.0, 5827.0], [63.1, 5836.0], [63.2, 5840.0], [63.3, 5876.0], [63.4, 5895.0], [63.5, 6018.0], [63.6, 6018.0], [63.7, 6069.0], [63.8, 6102.0], [63.9, 6136.0], [64.0, 6142.0], [64.1, 6177.0], [64.2, 6219.0], [64.3, 6219.0], [64.4, 6220.0], [64.5, 6230.0], [64.6, 6232.0], [64.7, 6261.0], [64.8, 6278.0], [64.9, 6280.0], [65.0, 6280.0], [65.1, 6291.0], [65.2, 6295.0], [65.3, 6407.0], [65.4, 6519.0], [65.5, 6535.0], [65.6, 6590.0], [65.7, 6633.0], [65.8, 6633.0], [65.9, 6638.0], [66.0, 6643.0], [66.1, 6698.0], [66.2, 6712.0], [66.3, 6726.0], [66.4, 6758.0], [66.5, 6758.0], [66.6, 6774.0], [66.7, 6779.0], [66.8, 6788.0], [66.9, 6859.0], [67.0, 6865.0], [67.1, 6906.0], [67.2, 6906.0], [67.3, 6909.0], [67.4, 6933.0], [67.5, 6995.0], [67.6, 6996.0], [67.7, 7018.0], [67.8, 7098.0], [67.9, 7098.0], [68.0, 7198.0], [68.1, 7290.0], [68.2, 7294.0], [68.3, 7338.0], [68.4, 7383.0], [68.5, 7542.0], [68.6, 7542.0], [68.7, 7544.0], [68.8, 7576.0], [68.9, 7644.0], [69.0, 7704.0], [69.1, 7712.0], [69.2, 7713.0], [69.3, 7713.0], [69.4, 7745.0], [69.5, 7768.0], [69.6, 7778.0], [69.7, 7822.0], [69.8, 7835.0], [69.9, 7902.0], [70.0, 7902.0], [70.1, 7920.0], [70.2, 8114.0], [70.3, 8142.0], [70.4, 8143.0], [70.5, 8174.0], [70.6, 8217.0], [70.7, 8278.0], [70.8, 8278.0], [70.9, 8279.0], [71.0, 8285.0], [71.1, 8350.0], [71.2, 8382.0], [71.3, 8581.0], [71.4, 8593.0], [71.5, 8593.0], [71.6, 8611.0], [71.7, 8637.0], [71.8, 8641.0], [71.9, 8723.0], [72.0, 8726.0], [72.1, 8770.0], [72.2, 8770.0], [72.3, 8817.0], [72.4, 8846.0], [72.5, 8882.0], [72.6, 8972.0], [72.7, 8990.0], [72.8, 9003.0], [72.9, 9003.0], [73.0, 9005.0], [73.1, 9039.0], [73.2, 9054.0], [73.3, 9063.0], [73.4, 9172.0], [73.5, 9194.0], [73.6, 9194.0], [73.7, 9222.0], [73.8, 9228.0], [73.9, 9307.0], [74.0, 9336.0], [74.1, 9344.0], [74.2, 9366.0], [74.3, 9366.0], [74.4, 9367.0], [74.5, 9446.0], [74.6, 9451.0], [74.7, 9455.0], [74.8, 9461.0], [74.9, 9492.0], [75.0, 9492.0], [75.1, 9506.0], [75.2, 9519.0], [75.3, 9529.0], [75.4, 9540.0], [75.5, 9543.0], [75.6, 9571.0], [75.7, 9607.0], [75.8, 9607.0], [75.9, 9655.0], [76.0, 9687.0], [76.1, 9722.0], [76.2, 9787.0], [76.3, 9791.0], [76.4, 9848.0], [76.5, 9848.0], [76.6, 9892.0], [76.7, 9950.0], [76.8, 9977.0], [76.9, 10045.0], [77.0, 10051.0], [77.1, 10066.0], [77.2, 10066.0], [77.3, 10089.0], [77.4, 10140.0], [77.5, 10146.0], [77.6, 10191.0], [77.7, 10213.0], [77.8, 10218.0], [77.9, 10218.0], [78.0, 10221.0], [78.1, 10274.0], [78.2, 10355.0], [78.3, 10363.0], [78.4, 10376.0], [78.5, 10376.0], [78.6, 10376.0], [78.7, 10382.0], [78.8, 10410.0], [78.9, 10450.0], [79.0, 10456.0], [79.1, 10467.0], [79.2, 10473.0], [79.3, 10473.0], [79.4, 10485.0], [79.5, 10489.0], [79.6, 10540.0], [79.7, 10541.0], [79.8, 10543.0], [79.9, 10574.0], [80.0, 10574.0], [80.1, 10595.0], [80.2, 10615.0], [80.3, 10668.0], [80.4, 10673.0], [80.5, 10676.0], [80.6, 10683.0], [80.7, 10684.0], [80.8, 10684.0], [80.9, 10712.0], [81.0, 10768.0], [81.1, 10776.0], [81.2, 10779.0], [81.3, 10786.0], [81.4, 10794.0], [81.5, 10794.0], [81.6, 10816.0], [81.7, 10876.0], [81.8, 10904.0], [81.9, 10907.0], [82.0, 10932.0], [82.1, 10937.0], [82.2, 10937.0], [82.3, 10938.0], [82.4, 10976.0], [82.5, 10980.0], [82.6, 11055.0], [82.7, 11061.0], [82.8, 11082.0], [82.9, 11082.0], [83.0, 11149.0], [83.1, 11159.0], [83.2, 11230.0], [83.3, 11279.0], [83.4, 11340.0], [83.5, 11342.0], [83.6, 11342.0], [83.7, 11347.0], [83.8, 11524.0], [83.9, 11526.0], [84.0, 11560.0], [84.1, 11581.0], [84.2, 11588.0], [84.3, 11588.0], [84.4, 11608.0], [84.5, 11630.0], [84.6, 11652.0], [84.7, 11664.0], [84.8, 11690.0], [84.9, 11697.0], [85.0, 11697.0], [85.1, 11718.0], [85.2, 11733.0], [85.3, 11750.0], [85.4, 11750.0], [85.5, 11860.0], [85.6, 11878.0], [85.7, 12023.0], [85.8, 12023.0], [85.9, 12047.0], [86.0, 12118.0], [86.1, 12170.0], [86.2, 12325.0], [86.3, 12395.0], [86.4, 12423.0], [86.5, 12423.0], [86.6, 12439.0], [86.7, 12463.0], [86.8, 12523.0], [86.9, 12526.0], [87.0, 12537.0], [87.1, 12540.0], [87.2, 12540.0], [87.3, 12543.0], [87.4, 12567.0], [87.5, 12592.0], [87.6, 12598.0], [87.7, 12767.0], [87.8, 12805.0], [87.9, 12805.0], [88.0, 12842.0], [88.1, 12880.0], [88.2, 12891.0], [88.3, 12899.0], [88.4, 12937.0], [88.5, 13018.0], [88.6, 13018.0], [88.7, 13115.0], [88.8, 13243.0], [88.9, 13433.0], [89.0, 13491.0], [89.1, 13510.0], [89.2, 13579.0], [89.3, 13579.0], [89.4, 13668.0], [89.5, 13690.0], [89.6, 13796.0], [89.7, 13841.0], [89.8, 13866.0], [89.9, 13941.0], [90.0, 13941.0], [90.1, 13992.0], [90.2, 14046.0], [90.3, 14113.0], [90.4, 14138.0], [90.5, 14280.0], [90.6, 14302.0], [90.7, 14373.0], [90.8, 14373.0], [90.9, 14430.0], [91.0, 14524.0], [91.1, 14569.0], [91.2, 14623.0], [91.3, 14794.0], [91.4, 14852.0], [91.5, 14852.0], [91.6, 14880.0], [91.7, 15044.0], [91.8, 15179.0], [91.9, 15216.0], [92.0, 15319.0], [92.1, 15495.0], [92.2, 15495.0], [92.3, 15538.0], [92.4, 15618.0], [92.5, 15632.0], [92.6, 15639.0], [92.7, 15737.0], [92.8, 15887.0], [92.9, 15887.0], [93.0, 16045.0], [93.1, 16046.0], [93.2, 16098.0], [93.3, 16143.0], [93.4, 16203.0], [93.5, 16263.0], [93.6, 16263.0], [93.7, 16390.0], [93.8, 16412.0], [93.9, 16420.0], [94.0, 16513.0], [94.1, 16659.0], [94.2, 16664.0], [94.3, 16664.0], [94.4, 16779.0], [94.5, 16799.0], [94.6, 16802.0], [94.7, 16811.0], [94.8, 16843.0], [94.9, 16890.0], [95.0, 16890.0], [95.1, 16935.0], [95.2, 16946.0], [95.3, 17007.0], [95.4, 17019.0], [95.5, 17022.0], [95.6, 17030.0], [95.7, 17074.0], [95.8, 17074.0], [95.9, 17184.0], [96.0, 17193.0], [96.1, 17198.0], [96.2, 17670.0], [96.3, 17686.0], [96.4, 17695.0], [96.5, 17695.0], [96.6, 17765.0], [96.7, 17905.0], [96.8, 18136.0], [96.9, 18149.0], [97.0, 18174.0], [97.1, 18215.0], [97.2, 18215.0], [97.3, 18281.0], [97.4, 18283.0], [97.5, 18382.0], [97.6, 18394.0], [97.7, 18491.0], [97.8, 18492.0], [97.9, 18492.0], [98.0, 18686.0], [98.1, 18891.0], [98.2, 19112.0], [98.3, 20113.0], [98.4, 20167.0], [98.5, 20182.0], [98.6, 20182.0], [98.7, 20186.0], [98.8, 20387.0], [98.9, 20550.0], [99.0, 20710.0], [99.1, 20747.0], [99.2, 20841.0], [99.3, 20841.0], [99.4, 21064.0], [99.5, 21209.0], [99.6, 21610.0], [99.7, 22100.0], [99.8, 22227.0], [99.9, 24665.0], [100.0, 24665.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 55.0], [0.1, 55.0], [0.2, 56.0], [0.3, 57.0], [0.4, 57.0], [0.5, 58.0], [0.6, 60.0], [0.7, 61.0], [0.8, 61.0], [0.9, 64.0], [1.0, 64.0], [1.1, 65.0], [1.2, 65.0], [1.3, 68.0], [1.4, 68.0], [1.5, 68.0], [1.6, 68.0], [1.7, 70.0], [1.8, 70.0], [1.9, 71.0], [2.0, 71.0], [2.1, 73.0], [2.2, 73.0], [2.3, 73.0], [2.4, 73.0], [2.5, 74.0], [2.6, 80.0], [2.7, 84.0], [2.8, 87.0], [2.9, 87.0], [3.0, 88.0], [3.1, 88.0], [3.2, 91.0], [3.3, 97.0], [3.4, 97.0], [3.5, 97.0], [3.6, 97.0], [3.7, 98.0], [3.8, 98.0], [3.9, 103.0], [4.0, 103.0], [4.1, 104.0], [4.2, 105.0], [4.3, 105.0], [4.4, 106.0], [4.5, 113.0], [4.6, 113.0], [4.7, 132.0], [4.8, 137.0], [4.9, 162.0], [5.0, 162.0], [5.1, 183.0], [5.2, 194.0], [5.3, 309.0], [5.4, 314.0], [5.5, 323.0], [5.6, 359.0], [5.7, 385.0], [5.8, 385.0], [5.9, 385.0], [6.0, 390.0], [6.1, 398.0], [6.2, 400.0], [6.3, 401.0], [6.4, 401.0], [6.5, 401.0], [6.6, 403.0], [6.7, 410.0], [6.8, 410.0], [6.9, 412.0], [7.0, 414.0], [7.1, 414.0], [7.2, 414.0], [7.3, 415.0], [7.4, 424.0], [7.5, 426.0], [7.6, 427.0], [7.7, 429.0], [7.8, 430.0], [7.9, 430.0], [8.0, 432.0], [8.1, 433.0], [8.2, 435.0], [8.3, 439.0], [8.4, 439.0], [8.5, 439.0], [8.6, 439.0], [8.7, 439.0], [8.8, 439.0], [8.9, 439.0], [9.0, 443.0], [9.1, 443.0], [9.2, 445.0], [9.3, 445.0], [9.4, 446.0], [9.5, 448.0], [9.6, 450.0], [9.7, 453.0], [9.8, 453.0], [9.9, 454.0], [10.0, 454.0], [10.1, 455.0], [10.2, 455.0], [10.3, 456.0], [10.4, 456.0], [10.5, 457.0], [10.6, 458.0], [10.7, 459.0], [10.8, 459.0], [10.9, 459.0], [11.0, 460.0], [11.1, 463.0], [11.2, 465.0], [11.3, 468.0], [11.4, 470.0], [11.5, 470.0], [11.6, 472.0], [11.7, 472.0], [11.8, 472.0], [11.9, 474.0], [12.0, 475.0], [12.1, 475.0], [12.2, 475.0], [12.3, 476.0], [12.4, 481.0], [12.5, 481.0], [12.6, 482.0], [12.7, 485.0], [12.8, 494.0], [12.9, 494.0], [13.0, 495.0], [13.1, 496.0], [13.2, 498.0], [13.3, 504.0], [13.4, 505.0], [13.5, 508.0], [13.6, 508.0], [13.7, 516.0], [13.8, 517.0], [13.9, 517.0], [14.0, 520.0], [14.1, 532.0], [14.2, 532.0], [14.3, 532.0], [14.4, 534.0], [14.5, 542.0], [14.6, 544.0], [14.7, 547.0], [14.8, 555.0], [14.9, 558.0], [15.0, 558.0], [15.1, 561.0], [15.2, 566.0], [15.3, 573.0], [15.4, 573.0], [15.5, 574.0], [15.6, 585.0], [15.7, 618.0], [15.8, 618.0], [15.9, 676.0], [16.0, 688.0], [16.1, 690.0], [16.2, 705.0], [16.3, 715.0], [16.4, 723.0], [16.5, 723.0], [16.6, 733.0], [16.7, 753.0], [16.8, 762.0], [16.9, 778.0], [17.0, 779.0], [17.1, 787.0], [17.2, 787.0], [17.3, 800.0], [17.4, 808.0], [17.5, 813.0], [17.6, 817.0], [17.7, 862.0], [17.8, 880.0], [17.9, 880.0], [18.0, 884.0], [18.1, 893.0], [18.2, 896.0], [18.3, 897.0], [18.4, 898.0], [18.5, 900.0], [18.6, 900.0], [18.7, 907.0], [18.8, 907.0], [18.9, 912.0], [19.0, 913.0], [19.1, 916.0], [19.2, 916.0], [19.3, 916.0], [19.4, 922.0], [19.5, 923.0], [19.6, 925.0], [19.7, 928.0], [19.8, 929.0], [19.9, 929.0], [20.0, 935.0], [20.1, 935.0], [20.2, 937.0], [20.3, 937.0], [20.4, 938.0], [20.5, 939.0], [20.6, 941.0], [20.7, 942.0], [20.8, 942.0], [20.9, 943.0], [21.0, 944.0], [21.1, 944.0], [21.2, 949.0], [21.3, 949.0], [21.4, 949.0], [21.5, 949.0], [21.6, 951.0], [21.7, 952.0], [21.8, 952.0], [21.9, 954.0], [22.0, 954.0], [22.1, 955.0], [22.2, 955.0], [22.3, 955.0], [22.4, 957.0], [22.5, 957.0], [22.6, 957.0], [22.7, 959.0], [22.8, 959.0], [22.9, 959.0], [23.0, 962.0], [23.1, 965.0], [23.2, 966.0], [23.3, 968.0], [23.4, 968.0], [23.5, 969.0], [23.6, 969.0], [23.7, 970.0], [23.8, 970.0], [23.9, 973.0], [24.0, 984.0], [24.1, 987.0], [24.2, 1002.0], [24.3, 1002.0], [24.4, 1008.0], [24.5, 1009.0], [24.6, 1009.0], [24.7, 1010.0], [24.8, 1011.0], [24.9, 1013.0], [25.0, 1018.0], [25.1, 1018.0], [25.2, 1026.0], [25.3, 1031.0], [25.4, 1041.0], [25.5, 1047.0], [25.6, 1051.0], [25.7, 1051.0], [25.8, 1051.0], [25.9, 1052.0], [26.0, 1054.0], [26.1, 1063.0], [26.2, 1065.0], [26.3, 1068.0], [26.4, 1087.0], [26.5, 1087.0], [26.6, 1095.0], [26.7, 1098.0], [26.8, 1100.0], [26.9, 1116.0], [27.0, 1135.0], [27.1, 1150.0], [27.2, 1150.0], [27.3, 1161.0], [27.4, 1167.0], [27.5, 1169.0], [27.6, 1174.0], [27.7, 1185.0], [27.8, 1187.0], [27.9, 1187.0], [28.0, 1191.0], [28.1, 1192.0], [28.2, 1201.0], [28.3, 1202.0], [28.4, 1202.0], [28.5, 1219.0], [28.6, 1219.0], [28.7, 1228.0], [28.8, 1231.0], [28.9, 1231.0], [29.0, 1244.0], [29.1, 1267.0], [29.2, 1273.0], [29.3, 1273.0], [29.4, 1274.0], [29.5, 1278.0], [29.6, 1278.0], [29.7, 1290.0], [29.8, 1300.0], [29.9, 1304.0], [30.0, 1310.0], [30.1, 1310.0], [30.2, 1316.0], [30.3, 1321.0], [30.4, 1326.0], [30.5, 1328.0], [30.6, 1331.0], [30.7, 1338.0], [30.8, 1338.0], [30.9, 1343.0], [31.0, 1349.0], [31.1, 1349.0], [31.2, 1352.0], [31.3, 1354.0], [31.4, 1357.0], [31.5, 1357.0], [31.6, 1357.0], [31.7, 1362.0], [31.8, 1364.0], [31.9, 1364.0], [32.0, 1367.0], [32.1, 1368.0], [32.2, 1368.0], [32.3, 1371.0], [32.4, 1372.0], [32.5, 1373.0], [32.6, 1379.0], [32.7, 1381.0], [32.8, 1381.0], [32.9, 1381.0], [33.0, 1382.0], [33.1, 1387.0], [33.2, 1387.0], [33.3, 1392.0], [33.4, 1394.0], [33.5, 1398.0], [33.6, 1398.0], [33.7, 1403.0], [33.8, 1406.0], [33.9, 1412.0], [34.0, 1417.0], [34.1, 1420.0], [34.2, 1422.0], [34.3, 1422.0], [34.4, 1434.0], [34.5, 1439.0], [34.6, 1445.0], [34.7, 1459.0], [34.8, 1468.0], [34.9, 1474.0], [35.0, 1484.0], [35.1, 1484.0], [35.2, 1487.0], [35.3, 1504.0], [35.4, 1524.0], [35.5, 1528.0], [35.6, 1588.0], [35.7, 1590.0], [35.8, 1590.0], [35.9, 1602.0], [36.0, 1604.0], [36.1, 1604.0], [36.2, 1606.0], [36.3, 1615.0], [36.4, 1617.0], [36.5, 1617.0], [36.6, 1617.0], [36.7, 1619.0], [36.8, 1629.0], [36.9, 1631.0], [37.0, 1632.0], [37.1, 1634.0], [37.2, 1634.0], [37.3, 1636.0], [37.4, 1642.0], [37.5, 1643.0], [37.6, 1644.0], [37.7, 1647.0], [37.8, 1650.0], [37.9, 1650.0], [38.0, 1657.0], [38.1, 1658.0], [38.2, 1659.0], [38.3, 1664.0], [38.4, 1665.0], [38.5, 1665.0], [38.6, 1665.0], [38.7, 1668.0], [38.8, 1669.0], [38.9, 1677.0], [39.0, 1681.0], [39.1, 1683.0], [39.2, 1693.0], [39.3, 1693.0], [39.4, 1694.0], [39.5, 1709.0], [39.6, 1717.0], [39.7, 1720.0], [39.8, 1722.0], [39.9, 1725.0], [40.0, 1726.0], [40.1, 1726.0], [40.2, 1730.0], [40.3, 1734.0], [40.4, 1738.0], [40.5, 1738.0], [40.6, 1744.0], [40.7, 1744.0], [40.8, 1744.0], [40.9, 1754.0], [41.0, 1755.0], [41.1, 1756.0], [41.2, 1757.0], [41.3, 1757.0], [41.4, 1759.0], [41.5, 1759.0], [41.6, 1760.0], [41.7, 1761.0], [41.8, 1769.0], [41.9, 1772.0], [42.0, 1773.0], [42.1, 1778.0], [42.2, 1778.0], [42.3, 1779.0], [42.4, 1779.0], [42.5, 1785.0], [42.6, 1792.0], [42.7, 1797.0], [42.8, 1804.0], [42.9, 1804.0], [43.0, 1804.0], [43.1, 1814.0], [43.2, 1844.0], [43.3, 1852.0], [43.4, 1868.0], [43.5, 1869.0], [43.6, 1869.0], [43.7, 1872.0], [43.8, 1873.0], [43.9, 1907.0], [44.0, 1918.0], [44.1, 1921.0], [44.2, 1933.0], [44.3, 1933.0], [44.4, 1940.0], [44.5, 1942.0], [44.6, 1953.0], [44.7, 1956.0], [44.8, 1957.0], [44.9, 1965.0], [45.0, 1965.0], [45.1, 1969.0], [45.2, 1970.0], [45.3, 1972.0], [45.4, 1977.0], [45.5, 1982.0], [45.6, 1982.0], [45.7, 1985.0], [45.8, 1985.0], [45.9, 1985.0], [46.0, 1987.0], [46.1, 1994.0], [46.2, 1994.0], [46.3, 1996.0], [46.4, 1996.0], [46.5, 1996.0], [46.6, 1997.0], [46.7, 1997.0], [46.8, 2005.0], [46.9, 2008.0], [47.0, 2010.0], [47.1, 2012.0], [47.2, 2012.0], [47.3, 2015.0], [47.4, 2015.0], [47.5, 2020.0], [47.6, 2024.0], [47.7, 2028.0], [47.8, 2031.0], [47.9, 2031.0], [48.0, 2033.0], [48.1, 2041.0], [48.2, 2049.0], [48.3, 2057.0], [48.4, 2062.0], [48.5, 2066.0], [48.6, 2066.0], [48.7, 2068.0], [48.8, 2071.0], [48.9, 2077.0], [49.0, 2078.0], [49.1, 2081.0], [49.2, 2093.0], [49.3, 2093.0], [49.4, 2093.0], [49.5, 2099.0], [49.6, 2107.0], [49.7, 2109.0], [49.8, 2113.0], [49.9, 2122.0], [50.0, 2122.0], [50.1, 2128.0], [50.2, 2132.0], [50.3, 2139.0], [50.4, 2140.0], [50.5, 2140.0], [50.6, 2145.0], [50.7, 2154.0], [50.8, 2154.0], [50.9, 2155.0], [51.0, 2157.0], [51.1, 2158.0], [51.2, 2162.0], [51.3, 2168.0], [51.4, 2169.0], [51.5, 2169.0], [51.6, 2172.0], [51.7, 2177.0], [51.8, 2178.0], [51.9, 2180.0], [52.0, 2185.0], [52.1, 2190.0], [52.2, 2190.0], [52.3, 2193.0], [52.4, 2193.0], [52.5, 2195.0], [52.6, 2195.0], [52.7, 2204.0], [52.8, 2210.0], [52.9, 2210.0], [53.0, 2217.0], [53.1, 2224.0], [53.2, 2234.0], [53.3, 2239.0], [53.4, 2240.0], [53.5, 2249.0], [53.6, 2249.0], [53.7, 2252.0], [53.8, 2268.0], [53.9, 2273.0], [54.0, 2287.0], [54.1, 2305.0], [54.2, 2311.0], [54.3, 2311.0], [54.4, 2317.0], [54.5, 2331.0], [54.6, 2342.0], [54.7, 2359.0], [54.8, 2359.0], [54.9, 2360.0], [55.0, 2360.0], [55.1, 2365.0], [55.2, 2375.0], [55.3, 2379.0], [55.4, 2384.0], [55.5, 2402.0], [55.6, 2414.0], [55.7, 2417.0], [55.8, 2417.0], [55.9, 2419.0], [56.0, 2428.0], [56.1, 2440.0], [56.2, 2444.0], [56.3, 2450.0], [56.4, 2451.0], [56.5, 2451.0], [56.6, 2455.0], [56.7, 2457.0], [56.8, 2458.0], [56.9, 2459.0], [57.0, 2462.0], [57.1, 2462.0], [57.2, 2462.0], [57.3, 2474.0], [57.4, 2475.0], [57.5, 2480.0], [57.6, 2491.0], [57.7, 2493.0], [57.8, 2507.0], [57.9, 2507.0], [58.0, 2508.0], [58.1, 2512.0], [58.2, 2519.0], [58.3, 2519.0], [58.4, 2533.0], [58.5, 2538.0], [58.6, 2538.0], [58.7, 2552.0], [58.8, 2557.0], [58.9, 2557.0], [59.0, 2574.0], [59.1, 2581.0], [59.2, 2591.0], [59.3, 2591.0], [59.4, 2594.0], [59.5, 2600.0], [59.6, 2605.0], [59.7, 2626.0], [59.8, 2628.0], [59.9, 2635.0], [60.0, 2635.0], [60.1, 2639.0], [60.2, 2649.0], [60.3, 2653.0], [60.4, 2660.0], [60.5, 2668.0], [60.6, 2673.0], [60.7, 2675.0], [60.8, 2675.0], [60.9, 2706.0], [61.0, 2738.0], [61.1, 2744.0], [61.2, 2756.0], [61.3, 2756.0], [61.4, 2769.0], [61.5, 2769.0], [61.6, 2782.0], [61.7, 2797.0], [61.8, 2801.0], [61.9, 2802.0], [62.0, 2804.0], [62.1, 2821.0], [62.2, 2821.0], [62.3, 2822.0], [62.4, 2822.0], [62.5, 2835.0], [62.6, 2840.0], [62.7, 2855.0], [62.8, 2867.0], [62.9, 2867.0], [63.0, 2872.0], [63.1, 2880.0], [63.2, 2888.0], [63.3, 2892.0], [63.4, 2906.0], [63.5, 2919.0], [63.6, 2919.0], [63.7, 2935.0], [63.8, 2948.0], [63.9, 2949.0], [64.0, 2954.0], [64.1, 2958.0], [64.2, 2961.0], [64.3, 2961.0], [64.4, 2969.0], [64.5, 2971.0], [64.6, 2985.0], [64.7, 2994.0], [64.8, 2999.0], [64.9, 3011.0], [65.0, 3011.0], [65.1, 3022.0], [65.2, 3032.0], [65.3, 3033.0], [65.4, 3041.0], [65.5, 3048.0], [65.6, 3049.0], [65.7, 3060.0], [65.8, 3060.0], [65.9, 3062.0], [66.0, 3077.0], [66.1, 3095.0], [66.2, 3112.0], [66.3, 3123.0], [66.4, 3130.0], [66.5, 3130.0], [66.6, 3138.0], [66.7, 3142.0], [66.8, 3142.0], [66.9, 3144.0], [67.0, 3145.0], [67.1, 3154.0], [67.2, 3154.0], [67.3, 3164.0], [67.4, 3166.0], [67.5, 3171.0], [67.6, 3178.0], [67.7, 3191.0], [67.8, 3207.0], [67.9, 3207.0], [68.0, 3218.0], [68.1, 3227.0], [68.2, 3228.0], [68.3, 3243.0], [68.4, 3246.0], [68.5, 3253.0], [68.6, 3253.0], [68.7, 3271.0], [68.8, 3283.0], [68.9, 3287.0], [69.0, 3289.0], [69.1, 3295.0], [69.2, 3310.0], [69.3, 3310.0], [69.4, 3316.0], [69.5, 3329.0], [69.6, 3342.0], [69.7, 3344.0], [69.8, 3369.0], [69.9, 3382.0], [70.0, 3382.0], [70.1, 3387.0], [70.2, 3388.0], [70.3, 3390.0], [70.4, 3396.0], [70.5, 3399.0], [70.6, 3400.0], [70.7, 3451.0], [70.8, 3451.0], [70.9, 3466.0], [71.0, 3470.0], [71.1, 3472.0], [71.2, 3478.0], [71.3, 3509.0], [71.4, 3509.0], [71.5, 3509.0], [71.6, 3528.0], [71.7, 3545.0], [71.8, 3549.0], [71.9, 3550.0], [72.0, 3560.0], [72.1, 3569.0], [72.2, 3569.0], [72.3, 3586.0], [72.4, 3602.0], [72.5, 3602.0], [72.6, 3620.0], [72.7, 3628.0], [72.8, 3655.0], [72.9, 3655.0], [73.0, 3659.0], [73.1, 3660.0], [73.2, 3665.0], [73.3, 3667.0], [73.4, 3670.0], [73.5, 3678.0], [73.6, 3678.0], [73.7, 3691.0], [73.8, 3697.0], [73.9, 3709.0], [74.0, 3711.0], [74.1, 3718.0], [74.2, 3720.0], [74.3, 3720.0], [74.4, 3729.0], [74.5, 3735.0], [74.6, 3763.0], [74.7, 3768.0], [74.8, 3774.0], [74.9, 3785.0], [75.0, 3785.0], [75.1, 3790.0], [75.2, 3794.0], [75.3, 3813.0], [75.4, 3816.0], [75.5, 3819.0], [75.6, 3819.0], [75.7, 3828.0], [75.8, 3828.0], [75.9, 3832.0], [76.0, 3832.0], [76.1, 3839.0], [76.2, 3870.0], [76.3, 3873.0], [76.4, 3879.0], [76.5, 3879.0], [76.6, 3885.0], [76.7, 3897.0], [76.8, 3905.0], [76.9, 3907.0], [77.0, 3909.0], [77.1, 3918.0], [77.2, 3918.0], [77.3, 3926.0], [77.4, 3929.0], [77.5, 3932.0], [77.6, 3984.0], [77.7, 3992.0], [77.8, 4013.0], [77.9, 4013.0], [78.0, 4023.0], [78.1, 4024.0], [78.2, 4029.0], [78.3, 4056.0], [78.4, 4057.0], [78.5, 4059.0], [78.6, 4059.0], [78.7, 4066.0], [78.8, 4071.0], [78.9, 4071.0], [79.0, 4082.0], [79.1, 4085.0], [79.2, 4096.0], [79.3, 4096.0], [79.4, 4131.0], [79.5, 4140.0], [79.6, 4146.0], [79.7, 4146.0], [79.8, 4178.0], [79.9, 4179.0], [80.0, 4179.0], [80.1, 4179.0], [80.2, 4181.0], [80.3, 4185.0], [80.4, 4192.0], [80.5, 4193.0], [80.6, 4194.0], [80.7, 4196.0], [80.8, 4196.0], [80.9, 4205.0], [81.0, 4211.0], [81.1, 4213.0], [81.2, 4226.0], [81.3, 4262.0], [81.4, 4263.0], [81.5, 4263.0], [81.6, 4282.0], [81.7, 4283.0], [81.8, 4312.0], [81.9, 4314.0], [82.0, 4364.0], [82.1, 4415.0], [82.2, 4415.0], [82.3, 4423.0], [82.4, 4429.0], [82.5, 4450.0], [82.6, 4471.0], [82.7, 4488.0], [82.8, 4494.0], [82.9, 4494.0], [83.0, 4500.0], [83.1, 4507.0], [83.2, 4514.0], [83.3, 4524.0], [83.4, 4534.0], [83.5, 4550.0], [83.6, 4550.0], [83.7, 4658.0], [83.8, 4661.0], [83.9, 4700.0], [84.0, 4719.0], [84.1, 4787.0], [84.2, 4811.0], [84.3, 4811.0], [84.4, 4879.0], [84.5, 4910.0], [84.6, 4923.0], [84.7, 4927.0], [84.8, 4946.0], [84.9, 4948.0], [85.0, 4948.0], [85.1, 4969.0], [85.2, 5018.0], [85.3, 5020.0], [85.4, 5024.0], [85.5, 5031.0], [85.6, 5045.0], [85.7, 5051.0], [85.8, 5051.0], [85.9, 5054.0], [86.0, 5101.0], [86.1, 5120.0], [86.2, 5141.0], [86.3, 5174.0], [86.4, 5187.0], [86.5, 5187.0], [86.6, 5187.0], [86.7, 5201.0], [86.8, 5236.0], [86.9, 5239.0], [87.0, 5244.0], [87.1, 5263.0], [87.2, 5263.0], [87.3, 5272.0], [87.4, 5285.0], [87.5, 5309.0], [87.6, 5316.0], [87.7, 5331.0], [87.8, 5354.0], [87.9, 5354.0], [88.0, 5369.0], [88.1, 5416.0], [88.2, 5449.0], [88.3, 5471.0], [88.4, 5524.0], [88.5, 5535.0], [88.6, 5535.0], [88.7, 5652.0], [88.8, 5733.0], [88.9, 5851.0], [89.0, 5867.0], [89.1, 5872.0], [89.2, 5893.0], [89.3, 5893.0], [89.4, 5942.0], [89.5, 5989.0], [89.6, 6048.0], [89.7, 6062.0], [89.8, 6065.0], [89.9, 6073.0], [90.0, 6073.0], [90.1, 6096.0], [90.2, 6097.0], [90.3, 6119.0], [90.4, 6124.0], [90.5, 6156.0], [90.6, 6192.0], [90.7, 6248.0], [90.8, 6248.0], [90.9, 6315.0], [91.0, 6336.0], [91.1, 6386.0], [91.2, 6394.0], [91.3, 6401.0], [91.4, 6469.0], [91.5, 6469.0], [91.6, 6503.0], [91.7, 6609.0], [91.8, 6681.0], [91.9, 6747.0], [92.0, 6765.0], [92.1, 6769.0], [92.2, 6769.0], [92.3, 6770.0], [92.4, 6779.0], [92.5, 6793.0], [92.6, 6803.0], [92.7, 6827.0], [92.8, 6849.0], [92.9, 6849.0], [93.0, 6852.0], [93.1, 6917.0], [93.2, 7052.0], [93.3, 7110.0], [93.4, 7168.0], [93.5, 7176.0], [93.6, 7176.0], [93.7, 7186.0], [93.8, 7293.0], [93.9, 7301.0], [94.0, 7405.0], [94.1, 7454.0], [94.2, 7469.0], [94.3, 7469.0], [94.4, 7507.0], [94.5, 7513.0], [94.6, 7532.0], [94.7, 7571.0], [94.8, 7598.0], [94.9, 7771.0], [95.0, 7771.0], [95.1, 7790.0], [95.2, 7848.0], [95.3, 7869.0], [95.4, 7878.0], [95.5, 7988.0], [95.6, 8059.0], [95.7, 8140.0], [95.8, 8140.0], [95.9, 8203.0], [96.0, 8285.0], [96.1, 8296.0], [96.2, 8300.0], [96.3, 8361.0], [96.4, 8396.0], [96.5, 8396.0], [96.6, 8431.0], [96.7, 8439.0], [96.8, 8455.0], [96.9, 8477.0], [97.0, 8582.0], [97.1, 8587.0], [97.2, 8587.0], [97.3, 8626.0], [97.4, 8669.0], [97.5, 8878.0], [97.6, 9014.0], [97.7, 9042.0], [97.8, 9059.0], [97.9, 9059.0], [98.0, 9084.0], [98.1, 9232.0], [98.2, 9312.0], [98.3, 9383.0], [98.4, 9562.0], [98.5, 9681.0], [98.6, 9681.0], [98.7, 10122.0], [98.8, 10138.0], [98.9, 10174.0], [99.0, 10447.0], [99.1, 10460.0], [99.2, 10707.0], [99.3, 10707.0], [99.4, 10813.0], [99.5, 11248.0], [99.6, 11723.0], [99.7, 11869.0], [99.8, 12066.0], [99.9, 12936.0], [100.0, 12936.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 520.0], [0.1, 534.0], [0.2, 534.0], [0.3, 534.0], [0.4, 561.0], [0.5, 578.0], [0.6, 631.0], [0.7, 716.0], [0.8, 829.0], [0.9, 834.0], [1.0, 860.0], [1.1, 875.0], [1.2, 879.0], [1.3, 880.0], [1.4, 880.0], [1.5, 893.0], [1.6, 901.0], [1.7, 909.0], [1.8, 913.0], [1.9, 930.0], [2.0, 957.0], [2.1, 977.0], [2.2, 1013.0], [2.3, 1017.0], [2.4, 1019.0], [2.5, 1074.0], [2.6, 1079.0], [2.7, 1084.0], [2.8, 1107.0], [2.9, 1126.0], [3.0, 1128.0], [3.1, 1129.0], [3.2, 1135.0], [3.3, 1135.0], [3.4, 1136.0], [3.5, 1141.0], [3.6, 1153.0], [3.7, 1162.0], [3.8, 1165.0], [3.9, 1166.0], [4.0, 1168.0], [4.1, 1169.0], [4.2, 1171.0], [4.3, 1172.0], [4.4, 1194.0], [4.5, 1198.0], [4.6, 1204.0], [4.7, 1207.0], [4.8, 1209.0], [4.9, 1210.0], [5.0, 1211.0], [5.1, 1212.0], [5.2, 1217.0], [5.3, 1220.0], [5.4, 1232.0], [5.5, 1232.0], [5.6, 1241.0], [5.7, 1244.0], [5.8, 1246.0], [5.9, 1249.0], [6.0, 1251.0], [6.1, 1255.0], [6.2, 1259.0], [6.3, 1262.0], [6.4, 1272.0], [6.5, 1283.0], [6.6, 1294.0], [6.7, 1297.0], [6.8, 1302.0], [6.9, 1303.0], [7.0, 1308.0], [7.1, 1309.0], [7.2, 1312.0], [7.3, 1314.0], [7.4, 1322.0], [7.5, 1325.0], [7.6, 1325.0], [7.7, 1369.0], [7.8, 1377.0], [7.9, 1385.0], [8.0, 1438.0], [8.1, 1457.0], [8.2, 1476.0], [8.3, 1496.0], [8.4, 1497.0], [8.5, 1511.0], [8.6, 1521.0], [8.7, 1578.0], [8.8, 1583.0], [8.9, 1589.0], [9.0, 1601.0], [9.1, 1603.0], [9.2, 1610.0], [9.3, 1614.0], [9.4, 1623.0], [9.5, 1624.0], [9.6, 1649.0], [9.7, 1662.0], [9.8, 1676.0], [9.9, 1682.0], [10.0, 1695.0], [10.1, 1725.0], [10.2, 1726.0], [10.3, 1754.0], [10.4, 1795.0], [10.5, 1801.0], [10.6, 1817.0], [10.7, 1821.0], [10.8, 1821.0], [10.9, 1825.0], [11.0, 1830.0], [11.1, 1837.0], [11.2, 1852.0], [11.3, 1862.0], [11.4, 1870.0], [11.5, 1899.0], [11.6, 1953.0], [11.7, 1957.0], [11.8, 1970.0], [11.9, 1971.0], [12.0, 2014.0], [12.1, 2014.0], [12.2, 2018.0], [12.3, 2029.0], [12.4, 2037.0], [12.5, 2044.0], [12.6, 2054.0], [12.7, 2057.0], [12.8, 2060.0], [12.9, 2071.0], [13.0, 2112.0], [13.1, 2158.0], [13.2, 2172.0], [13.3, 2182.0], [13.4, 2226.0], [13.5, 2235.0], [13.6, 2241.0], [13.7, 2264.0], [13.8, 2267.0], [13.9, 2268.0], [14.0, 2268.0], [14.1, 2281.0], [14.2, 2303.0], [14.3, 2340.0], [14.4, 2355.0], [14.5, 2368.0], [14.6, 2370.0], [14.7, 2376.0], [14.8, 2397.0], [14.9, 2437.0], [15.0, 2442.0], [15.1, 2442.0], [15.2, 2449.0], [15.3, 2453.0], [15.4, 2455.0], [15.5, 2457.0], [15.6, 2463.0], [15.7, 2465.0], [15.8, 2467.0], [15.9, 2477.0], [16.0, 2482.0], [16.1, 2483.0], [16.2, 2487.0], [16.3, 2489.0], [16.4, 2507.0], [16.5, 2522.0], [16.6, 2539.0], [16.7, 2543.0], [16.8, 2556.0], [16.9, 2561.0], [17.0, 2565.0], [17.1, 2570.0], [17.2, 2571.0], [17.3, 2582.0], [17.4, 2586.0], [17.5, 2589.0], [17.6, 2594.0], [17.7, 2641.0], [17.8, 2641.0], [17.9, 2643.0], [18.0, 2649.0], [18.1, 2651.0], [18.2, 2654.0], [18.3, 2663.0], [18.4, 2667.0], [18.5, 2679.0], [18.6, 2679.0], [18.7, 2683.0], [18.8, 2703.0], [18.9, 2724.0], [19.0, 2750.0], [19.1, 2761.0], [19.2, 2773.0], [19.3, 2787.0], [19.4, 2787.0], [19.5, 2788.0], [19.6, 2789.0], [19.7, 2795.0], [19.8, 2803.0], [19.9, 2810.0], [20.0, 2829.0], [20.1, 2881.0], [20.2, 2901.0], [20.3, 2924.0], [20.4, 2954.0], [20.5, 2967.0], [20.6, 2972.0], [20.7, 2979.0], [20.8, 2989.0], [20.9, 3002.0], [21.0, 3025.0], [21.1, 3034.0], [21.2, 3048.0], [21.3, 3055.0], [21.4, 3056.0], [21.5, 3100.0], [21.6, 3134.0], [21.7, 3144.0], [21.8, 3158.0], [21.9, 3229.0], [22.0, 3234.0], [22.1, 3252.0], [22.2, 3261.0], [22.3, 3273.0], [22.4, 3279.0], [22.5, 3321.0], [22.6, 3353.0], [22.7, 3357.0], [22.8, 3366.0], [22.9, 3399.0], [23.0, 3404.0], [23.1, 3433.0], [23.2, 3445.0], [23.3, 3468.0], [23.4, 3551.0], [23.5, 3590.0], [23.6, 3592.0], [23.7, 3593.0], [23.8, 3600.0], [23.9, 3603.0], [24.0, 3616.0], [24.1, 3621.0], [24.2, 3643.0], [24.3, 3655.0], [24.4, 3661.0], [24.5, 3667.0], [24.6, 3685.0], [24.7, 3711.0], [24.8, 3910.0], [24.9, 3916.0], [25.0, 3972.0], [25.1, 3978.0], [25.2, 3980.0], [25.3, 3997.0], [25.4, 4003.0], [25.5, 4011.0], [25.6, 4036.0], [25.7, 4043.0], [25.8, 4056.0], [25.9, 4058.0], [26.0, 4096.0], [26.1, 4117.0], [26.2, 4178.0], [26.3, 4184.0], [26.4, 4201.0], [26.5, 4227.0], [26.6, 4237.0], [26.7, 4248.0], [26.8, 4264.0], [26.9, 4273.0], [27.0, 4274.0], [27.1, 4292.0], [27.2, 4323.0], [27.3, 4330.0], [27.4, 4361.0], [27.5, 4375.0], [27.6, 4396.0], [27.7, 4432.0], [27.8, 4480.0], [27.9, 4527.0], [28.0, 4540.0], [28.1, 4577.0], [28.2, 4651.0], [28.3, 4656.0], [28.4, 4661.0], [28.5, 4682.0], [28.6, 4693.0], [28.7, 4700.0], [28.8, 4735.0], [28.9, 4739.0], [29.0, 4802.0], [29.1, 4854.0], [29.2, 4881.0], [29.3, 4893.0], [29.4, 4893.0], [29.5, 4908.0], [29.6, 4915.0], [29.7, 4932.0], [29.8, 4936.0], [29.9, 4966.0], [30.0, 4995.0], [30.1, 5009.0], [30.2, 5013.0], [30.3, 5017.0], [30.4, 5019.0], [30.5, 5021.0], [30.6, 5023.0], [30.7, 5040.0], [30.8, 5068.0], [30.9, 5069.0], [31.0, 5079.0], [31.1, 5081.0], [31.2, 5095.0], [31.3, 5108.0], [31.4, 5116.0], [31.5, 5143.0], [31.6, 5191.0], [31.7, 5208.0], [31.8, 5214.0], [31.9, 5217.0], [32.0, 5221.0], [32.1, 5263.0], [32.2, 5268.0], [32.3, 5270.0], [32.4, 5273.0], [32.5, 5277.0], [32.6, 5278.0], [32.7, 5285.0], [32.8, 5286.0], [32.9, 5288.0], [33.0, 5294.0], [33.1, 5300.0], [33.2, 5302.0], [33.3, 5305.0], [33.4, 5318.0], [33.5, 5328.0], [33.6, 5361.0], [33.7, 5386.0], [33.8, 5388.0], [33.9, 5422.0], [34.0, 5433.0], [34.1, 5434.0], [34.2, 5438.0], [34.3, 5447.0], [34.4, 5450.0], [34.5, 5452.0], [34.6, 5467.0], [34.7, 5468.0], [34.8, 5478.0], [34.9, 5481.0], [35.0, 5484.0], [35.1, 5484.0], [35.2, 5486.0], [35.3, 5490.0], [35.4, 5490.0], [35.5, 5512.0], [35.6, 5518.0], [35.7, 5542.0], [35.8, 5543.0], [35.9, 5555.0], [36.0, 5557.0], [36.1, 5596.0], [36.2, 5608.0], [36.3, 5617.0], [36.4, 5619.0], [36.5, 5639.0], [36.6, 5645.0], [36.7, 5669.0], [36.8, 5707.0], [36.9, 5776.0], [37.0, 5784.0], [37.1, 5815.0], [37.2, 5817.0], [37.3, 5829.0], [37.4, 5840.0], [37.5, 5851.0], [37.6, 5867.0], [37.7, 5876.0], [37.8, 5915.0], [37.9, 5918.0], [38.0, 5962.0], [38.1, 5964.0], [38.2, 5984.0], [38.3, 5991.0], [38.4, 5994.0], [38.5, 6013.0], [38.6, 6036.0], [38.7, 6100.0], [38.8, 6132.0], [38.9, 6157.0], [39.0, 6174.0], [39.1, 6190.0], [39.2, 6249.0], [39.3, 6279.0], [39.4, 6306.0], [39.5, 6363.0], [39.6, 6375.0], [39.7, 6402.0], [39.8, 6415.0], [39.9, 6417.0], [40.0, 6427.0], [40.1, 6444.0], [40.2, 6454.0], [40.3, 6470.0], [40.4, 6476.0], [40.5, 6481.0], [40.6, 6483.0], [40.7, 6493.0], [40.8, 6497.0], [40.9, 6505.0], [41.0, 6512.0], [41.1, 6522.0], [41.2, 6545.0], [41.3, 6554.0], [41.4, 6556.0], [41.5, 6590.0], [41.6, 6592.0], [41.7, 6595.0], [41.8, 6597.0], [41.9, 6598.0], [42.0, 6612.0], [42.1, 6625.0], [42.2, 6646.0], [42.3, 6659.0], [42.4, 6668.0], [42.5, 6684.0], [42.6, 6686.0], [42.7, 6706.0], [42.8, 6722.0], [42.9, 6739.0], [43.0, 6752.0], [43.1, 6767.0], [43.2, 6781.0], [43.3, 6806.0], [43.4, 6825.0], [43.5, 6831.0], [43.6, 6845.0], [43.7, 6858.0], [43.8, 6862.0], [43.9, 6875.0], [44.0, 6882.0], [44.1, 6906.0], [44.2, 6940.0], [44.3, 6951.0], [44.4, 6963.0], [44.5, 6976.0], [44.6, 6986.0], [44.7, 6988.0], [44.8, 7006.0], [44.9, 7007.0], [45.0, 7014.0], [45.1, 7029.0], [45.2, 7076.0], [45.3, 7088.0], [45.4, 7111.0], [45.5, 7131.0], [45.6, 7132.0], [45.7, 7151.0], [45.8, 7156.0], [45.9, 7178.0], [46.0, 7195.0], [46.1, 7212.0], [46.2, 7217.0], [46.3, 7218.0], [46.4, 7263.0], [46.5, 7266.0], [46.6, 7288.0], [46.7, 7296.0], [46.8, 7303.0], [46.9, 7305.0], [47.0, 7317.0], [47.1, 7324.0], [47.2, 7327.0], [47.3, 7338.0], [47.4, 7376.0], [47.5, 7381.0], [47.6, 7387.0], [47.7, 7490.0], [47.8, 7515.0], [47.9, 7558.0], [48.0, 7563.0], [48.1, 7618.0], [48.2, 7628.0], [48.3, 7631.0], [48.4, 7639.0], [48.5, 7672.0], [48.6, 7691.0], [48.7, 7705.0], [48.8, 7722.0], [48.9, 7742.0], [49.0, 7767.0], [49.1, 7780.0], [49.2, 7784.0], [49.3, 7789.0], [49.4, 7824.0], [49.5, 7827.0], [49.6, 7842.0], [49.7, 7844.0], [49.8, 7932.0], [49.9, 7943.0], [50.0, 8006.0], [50.1, 8009.0], [50.2, 8012.0], [50.3, 8013.0], [50.4, 8016.0], [50.5, 8032.0], [50.6, 8057.0], [50.7, 8090.0], [50.8, 8106.0], [50.9, 8133.0], [51.0, 8136.0], [51.1, 8148.0], [51.2, 8212.0], [51.3, 8214.0], [51.4, 8230.0], [51.5, 8234.0], [51.6, 8236.0], [51.7, 8240.0], [51.8, 8247.0], [51.9, 8253.0], [52.0, 8260.0], [52.1, 8267.0], [52.2, 8275.0], [52.3, 8289.0], [52.4, 8307.0], [52.5, 8331.0], [52.6, 8392.0], [52.7, 8431.0], [52.8, 8447.0], [52.9, 8506.0], [53.0, 8508.0], [53.1, 8518.0], [53.2, 8531.0], [53.3, 8546.0], [53.4, 8564.0], [53.5, 8588.0], [53.6, 8628.0], [53.7, 8632.0], [53.8, 8651.0], [53.9, 8652.0], [54.0, 8654.0], [54.1, 8676.0], [54.2, 8688.0], [54.3, 8694.0], [54.4, 8708.0], [54.5, 8740.0], [54.6, 8756.0], [54.7, 8773.0], [54.8, 8784.0], [54.9, 8805.0], [55.0, 8807.0], [55.1, 8840.0], [55.2, 8852.0], [55.3, 8855.0], [55.4, 8856.0], [55.5, 8865.0], [55.6, 8876.0], [55.7, 8884.0], [55.8, 8888.0], [55.9, 8892.0], [56.0, 8907.0], [56.1, 8942.0], [56.2, 8952.0], [56.3, 8959.0], [56.4, 8972.0], [56.5, 8973.0], [56.6, 8982.0], [56.7, 8986.0], [56.8, 8986.0], [56.9, 8988.0], [57.0, 9006.0], [57.1, 9014.0], [57.2, 9024.0], [57.3, 9039.0], [57.4, 9066.0], [57.5, 9136.0], [57.6, 9142.0], [57.7, 9158.0], [57.8, 9214.0], [57.9, 9239.0], [58.0, 9263.0], [58.1, 9274.0], [58.2, 9274.0], [58.3, 9303.0], [58.4, 9349.0], [58.5, 9379.0], [58.6, 9415.0], [58.7, 9426.0], [58.8, 9430.0], [58.9, 9439.0], [59.0, 9494.0], [59.1, 9512.0], [59.2, 9524.0], [59.3, 9529.0], [59.4, 9539.0], [59.5, 9541.0], [59.6, 9555.0], [59.7, 9556.0], [59.8, 9570.0], [59.9, 9573.0], [60.0, 9585.0], [60.1, 9617.0], [60.2, 9651.0], [60.3, 9652.0], [60.4, 9654.0], [60.5, 9681.0], [60.6, 9705.0], [60.7, 9744.0], [60.8, 9769.0], [60.9, 9771.0], [61.0, 9781.0], [61.1, 9790.0], [61.2, 9847.0], [61.3, 9898.0], [61.4, 9952.0], [61.5, 9982.0], [61.6, 10129.0], [61.7, 10205.0], [61.8, 10262.0], [61.9, 10280.0], [62.0, 10286.0], [62.1, 10382.0], [62.2, 10412.0], [62.3, 10427.0], [62.4, 10444.0], [62.5, 10464.0], [62.6, 10551.0], [62.7, 10572.0], [62.8, 10574.0], [62.9, 10587.0], [63.0, 10593.0], [63.1, 10598.0], [63.2, 10610.0], [63.3, 10653.0], [63.4, 10663.0], [63.5, 10666.0], [63.6, 10667.0], [63.7, 10680.0], [63.8, 10743.0], [63.9, 10773.0], [64.0, 10775.0], [64.1, 10792.0], [64.2, 10817.0], [64.3, 10829.0], [64.4, 10867.0], [64.5, 10876.0], [64.6, 10883.0], [64.7, 10885.0], [64.8, 10907.0], [64.9, 10919.0], [65.0, 10926.0], [65.1, 10956.0], [65.2, 10980.0], [65.3, 11009.0], [65.4, 11026.0], [65.5, 11039.0], [65.6, 11049.0], [65.7, 11060.0], [65.8, 11064.0], [65.9, 11077.0], [66.0, 11079.0], [66.1, 11081.0], [66.2, 11085.0], [66.3, 11090.0], [66.4, 11095.0], [66.5, 11096.0], [66.6, 11100.0], [66.7, 11109.0], [66.8, 11116.0], [66.9, 11143.0], [67.0, 11149.0], [67.1, 11149.0], [67.2, 11152.0], [67.3, 11156.0], [67.4, 11168.0], [67.5, 11181.0], [67.6, 11184.0], [67.7, 11188.0], [67.8, 11188.0], [67.9, 11194.0], [68.0, 11199.0], [68.1, 11200.0], [68.2, 11206.0], [68.3, 11207.0], [68.4, 11214.0], [68.5, 11215.0], [68.6, 11216.0], [68.7, 11222.0], [68.8, 11227.0], [68.9, 11227.0], [69.0, 11228.0], [69.1, 11236.0], [69.2, 11241.0], [69.3, 11249.0], [69.4, 11264.0], [69.5, 11286.0], [69.6, 11300.0], [69.7, 11321.0], [69.8, 11325.0], [69.9, 11368.0], [70.0, 11400.0], [70.1, 11403.0], [70.2, 11406.0], [70.3, 11416.0], [70.4, 11423.0], [70.5, 11511.0], [70.6, 11517.0], [70.7, 11544.0], [70.8, 11555.0], [70.9, 11571.0], [71.0, 11628.0], [71.1, 11641.0], [71.2, 11786.0], [71.3, 11789.0], [71.4, 11803.0], [71.5, 11888.0], [71.6, 11920.0], [71.7, 11926.0], [71.8, 11926.0], [71.9, 11949.0], [72.0, 11950.0], [72.1, 11959.0], [72.2, 11964.0], [72.3, 11993.0], [72.4, 12029.0], [72.5, 12048.0], [72.6, 12057.0], [72.7, 12082.0], [72.8, 12086.0], [72.9, 12099.0], [73.0, 12136.0], [73.1, 12166.0], [73.2, 12169.0], [73.3, 12176.0], [73.4, 12185.0], [73.5, 12194.0], [73.6, 12195.0], [73.7, 12203.0], [73.8, 12307.0], [73.9, 12406.0], [74.0, 12437.0], [74.1, 12482.0], [74.2, 12515.0], [74.3, 12566.0], [74.4, 12575.0], [74.5, 12575.0], [74.6, 12595.0], [74.7, 12601.0], [74.8, 12612.0], [74.9, 12614.0], [75.0, 12636.0], [75.1, 12652.0], [75.2, 12657.0], [75.3, 12706.0], [75.4, 12741.0], [75.5, 12777.0], [75.6, 12813.0], [75.7, 12826.0], [75.8, 12852.0], [75.9, 12894.0], [76.0, 12895.0], [76.1, 12895.0], [76.2, 12895.0], [76.3, 12901.0], [76.4, 12963.0], [76.5, 12991.0], [76.6, 13003.0], [76.7, 13008.0], [76.8, 13018.0], [76.9, 13056.0], [77.0, 13070.0], [77.1, 13072.0], [77.2, 13210.0], [77.3, 13223.0], [77.4, 13233.0], [77.5, 13253.0], [77.6, 13301.0], [77.7, 13323.0], [77.8, 13332.0], [77.9, 13354.0], [78.0, 13360.0], [78.1, 13387.0], [78.2, 13388.0], [78.3, 13423.0], [78.4, 13425.0], [78.5, 13450.0], [78.6, 13468.0], [78.7, 13525.0], [78.8, 13535.0], [78.9, 13554.0], [79.0, 13583.0], [79.1, 13591.0], [79.2, 13622.0], [79.3, 13668.0], [79.4, 13692.0], [79.5, 13693.0], [79.6, 13698.0], [79.7, 13710.0], [79.8, 13726.0], [79.9, 13734.0], [80.0, 13787.0], [80.1, 13788.0], [80.2, 13799.0], [80.3, 13820.0], [80.4, 13837.0], [80.5, 13901.0], [80.6, 13902.0], [80.7, 13915.0], [80.8, 13943.0], [80.9, 14073.0], [81.0, 14129.0], [81.1, 14262.0], [81.2, 14269.0], [81.3, 14285.0], [81.4, 14306.0], [81.5, 14334.0], [81.6, 14340.0], [81.7, 14345.0], [81.8, 14349.0], [81.9, 14416.0], [82.0, 14481.0], [82.1, 14499.0], [82.2, 14528.0], [82.3, 14571.0], [82.4, 14615.0], [82.5, 14621.0], [82.6, 14625.0], [82.7, 14644.0], [82.8, 14727.0], [82.9, 14732.0], [83.0, 14738.0], [83.1, 14838.0], [83.2, 14849.0], [83.3, 14856.0], [83.4, 14872.0], [83.5, 14898.0], [83.6, 14918.0], [83.7, 14919.0], [83.8, 14969.0], [83.9, 14979.0], [84.0, 14991.0], [84.1, 15038.0], [84.2, 15051.0], [84.3, 15054.0], [84.4, 15064.0], [84.5, 15065.0], [84.6, 15079.0], [84.7, 15096.0], [84.8, 15136.0], [84.9, 15202.0], [85.0, 15283.0], [85.1, 15325.0], [85.2, 15339.0], [85.3, 15341.0], [85.4, 15409.0], [85.5, 15487.0], [85.6, 15495.0], [85.7, 15523.0], [85.8, 15549.0], [85.9, 15552.0], [86.0, 15566.0], [86.1, 15602.0], [86.2, 15617.0], [86.3, 15623.0], [86.4, 15732.0], [86.5, 15749.0], [86.6, 15785.0], [86.7, 15810.0], [86.8, 15835.0], [86.9, 15839.0], [87.0, 15850.0], [87.1, 15940.0], [87.2, 16024.0], [87.3, 16056.0], [87.4, 16066.0], [87.5, 16077.0], [87.6, 16147.0], [87.7, 16193.0], [87.8, 16234.0], [87.9, 16237.0], [88.0, 16261.0], [88.1, 16288.0], [88.2, 16337.0], [88.3, 16337.0], [88.4, 16363.0], [88.5, 16447.0], [88.6, 16503.0], [88.7, 16577.0], [88.8, 16618.0], [88.9, 16622.0], [89.0, 16775.0], [89.1, 16820.0], [89.2, 16842.0], [89.3, 16849.0], [89.4, 16904.0], [89.5, 16910.0], [89.6, 16942.0], [89.7, 17028.0], [89.8, 17031.0], [89.9, 17056.0], [90.0, 17059.0], [90.1, 17063.0], [90.2, 17067.0], [90.3, 17069.0], [90.4, 17113.0], [90.5, 17124.0], [90.6, 17156.0], [90.7, 17237.0], [90.8, 17237.0], [90.9, 17309.0], [91.0, 17310.0], [91.1, 17441.0], [91.2, 17618.0], [91.3, 17636.0], [91.4, 17719.0], [91.5, 17762.0], [91.6, 17825.0], [91.7, 17881.0], [91.8, 17966.0], [91.9, 18058.0], [92.0, 18076.0], [92.1, 18092.0], [92.2, 18188.0], [92.3, 18218.0], [92.4, 18224.0], [92.5, 18230.0], [92.6, 18289.0], [92.7, 18325.0], [92.8, 18387.0], [92.9, 18429.0], [93.0, 18448.0], [93.1, 18451.0], [93.2, 18456.0], [93.3, 18458.0], [93.4, 18581.0], [93.5, 18581.0], [93.6, 18601.0], [93.7, 18651.0], [93.8, 18709.0], [93.9, 18797.0], [94.0, 18868.0], [94.1, 19057.0], [94.2, 19176.0], [94.3, 19299.0], [94.4, 19301.0], [94.5, 19336.0], [94.6, 19377.0], [94.7, 19423.0], [94.8, 19440.0], [94.9, 19447.0], [95.0, 19496.0], [95.1, 19619.0], [95.2, 19685.0], [95.3, 19753.0], [95.4, 20012.0], [95.5, 20044.0], [95.6, 20159.0], [95.7, 20186.0], [95.8, 20247.0], [95.9, 20314.0], [96.0, 20414.0], [96.1, 20433.0], [96.2, 20578.0], [96.3, 20703.0], [96.4, 20858.0], [96.5, 20864.0], [96.6, 21133.0], [96.7, 21140.0], [96.8, 21145.0], [96.9, 21147.0], [97.0, 21301.0], [97.1, 21419.0], [97.2, 21626.0], [97.3, 21648.0], [97.4, 21675.0], [97.5, 21769.0], [97.6, 21791.0], [97.7, 21940.0], [97.8, 22004.0], [97.9, 22095.0], [98.0, 22128.0], [98.1, 22137.0], [98.2, 22179.0], [98.3, 22501.0], [98.4, 22514.0], [98.5, 22704.0], [98.6, 22723.0], [98.7, 22837.0], [98.8, 22874.0], [98.9, 23003.0], [99.0, 23041.0], [99.1, 23092.0], [99.2, 23370.0], [99.3, 23390.0], [99.4, 23519.0], [99.5, 23975.0], [99.6, 24198.0], [99.7, 25574.0], [99.8, 25593.0], [99.9, 25990.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 61.0, "series": [{"data": [[400.0, 6.0], [500.0, 3.0], [600.0, 4.0], [700.0, 39.0], [800.0, 9.0], [900.0, 5.0], [1000.0, 13.0], [1100.0, 19.0], [1200.0, 28.0], [1300.0, 17.0], [1400.0, 11.0], [1500.0, 18.0], [1600.0, 21.0], [1700.0, 19.0], [1800.0, 4.0], [1900.0, 15.0], [2000.0, 16.0], [2100.0, 13.0], [2300.0, 10.0], [2200.0, 13.0], [2400.0, 6.0], [2500.0, 13.0], [2600.0, 7.0], [2700.0, 7.0], [2800.0, 3.0], [2900.0, 2.0], [3000.0, 2.0], [3100.0, 4.0], [3300.0, 7.0], [3200.0, 10.0], [3400.0, 13.0], [3500.0, 20.0], [3700.0, 7.0], [3600.0, 10.0], [3800.0, 9.0], [3900.0, 4.0], [4000.0, 7.0], [4200.0, 5.0], [4300.0, 10.0], [4100.0, 10.0], [4500.0, 8.0], [4400.0, 12.0], [4600.0, 6.0], [4800.0, 6.0], [4700.0, 7.0], [5100.0, 11.0], [5000.0, 6.0], [4900.0, 4.0], [5200.0, 11.0], [5300.0, 8.0], [5400.0, 9.0], [5500.0, 8.0], [5600.0, 4.0], [5800.0, 6.0], [5700.0, 1.0], [6100.0, 4.0], [6000.0, 2.0], [6200.0, 9.0], [6500.0, 3.0], [6600.0, 4.0], [6400.0, 1.0], [6900.0, 5.0], [6700.0, 6.0], [6800.0, 2.0], [7000.0, 2.0], [7100.0, 1.0], [7300.0, 2.0], [7200.0, 2.0], [7500.0, 3.0], [7600.0, 1.0], [7700.0, 6.0], [7900.0, 2.0], [7800.0, 2.0], [8100.0, 4.0], [8600.0, 3.0], [8700.0, 3.0], [8200.0, 4.0], [8500.0, 2.0], [8300.0, 2.0], [8800.0, 3.0], [9100.0, 2.0], [9000.0, 5.0], [8900.0, 2.0], [9200.0, 2.0], [9700.0, 3.0], [9600.0, 3.0], [9500.0, 6.0], [9300.0, 5.0], [9400.0, 5.0], [10000.0, 4.0], [10100.0, 3.0], [10200.0, 4.0], [9800.0, 2.0], [9900.0, 2.0], [10700.0, 6.0], [10400.0, 7.0], [10600.0, 6.0], [10500.0, 5.0], [10300.0, 5.0], [10900.0, 7.0], [11200.0, 2.0], [11100.0, 2.0], [10800.0, 2.0], [11000.0, 3.0], [11600.0, 6.0], [11500.0, 5.0], [11700.0, 4.0], [11300.0, 3.0], [12100.0, 2.0], [12000.0, 2.0], [11800.0, 2.0], [12500.0, 8.0], [12300.0, 2.0], [12400.0, 3.0], [12700.0, 1.0], [13000.0, 1.0], [12900.0, 1.0], [12800.0, 5.0], [13200.0, 1.0], [13100.0, 1.0], [13500.0, 2.0], [13600.0, 2.0], [13800.0, 2.0], [13700.0, 1.0], [13400.0, 2.0], [14100.0, 2.0], [14300.0, 2.0], [14000.0, 1.0], [13900.0, 2.0], [14200.0, 1.0], [14800.0, 2.0], [14700.0, 1.0], [14400.0, 1.0], [14500.0, 2.0], [14600.0, 1.0], [15100.0, 1.0], [15200.0, 1.0], [15000.0, 1.0], [15300.0, 1.0], [15600.0, 3.0], [15700.0, 1.0], [15500.0, 1.0], [15400.0, 1.0], [15800.0, 1.0], [16300.0, 1.0], [16000.0, 3.0], [16200.0, 2.0], [16100.0, 1.0], [16600.0, 2.0], [17000.0, 5.0], [16700.0, 2.0], [16800.0, 4.0], [17100.0, 3.0], [16900.0, 2.0], [16400.0, 2.0], [16500.0, 1.0], [17600.0, 3.0], [18200.0, 3.0], [18400.0, 2.0], [17700.0, 1.0], [17900.0, 1.0], [18300.0, 2.0], [18100.0, 3.0], [18600.0, 1.0], [18800.0, 1.0], [19100.0, 1.0], [20100.0, 4.0], [20300.0, 1.0], [20700.0, 2.0], [20800.0, 1.0], [21200.0, 1.0], [21000.0, 1.0], [20500.0, 1.0], [22100.0, 1.0], [21600.0, 1.0], [22200.0, 1.0], [24600.0, 1.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 33.0], [100.0, 12.0], [300.0, 8.0], [400.0, 61.0], [500.0, 21.0], [600.0, 4.0], [700.0, 9.0], [800.0, 11.0], [900.0, 49.0], [1000.0, 22.0], [1100.0, 12.0], [1200.0, 14.0], [1300.0, 33.0], [1400.0, 14.0], [1500.0, 5.0], [1600.0, 31.0], [1700.0, 29.0], [1800.0, 9.0], [1900.0, 25.0], [2000.0, 24.0], [2100.0, 27.0], [2300.0, 12.0], [2200.0, 12.0], [2400.0, 20.0], [2500.0, 14.0], [2600.0, 12.0], [2800.0, 14.0], [2700.0, 8.0], [2900.0, 13.0], [3000.0, 11.0], [3100.0, 14.0], [3200.0, 12.0], [3300.0, 12.0], [3400.0, 6.0], [3500.0, 9.0], [3600.0, 13.0], [3700.0, 12.0], [3800.0, 13.0], [3900.0, 9.0], [4000.0, 13.0], [4100.0, 13.0], [4200.0, 8.0], [4300.0, 3.0], [4500.0, 6.0], [4400.0, 7.0], [4600.0, 2.0], [4800.0, 2.0], [4700.0, 3.0], [5000.0, 7.0], [4900.0, 6.0], [5100.0, 6.0], [5300.0, 5.0], [5200.0, 7.0], [5500.0, 2.0], [5400.0, 3.0], [5600.0, 1.0], [5700.0, 1.0], [5800.0, 4.0], [6100.0, 4.0], [6000.0, 6.0], [5900.0, 2.0], [6300.0, 4.0], [6200.0, 1.0], [6600.0, 2.0], [6400.0, 2.0], [6500.0, 1.0], [6700.0, 6.0], [6800.0, 4.0], [6900.0, 1.0], [7000.0, 1.0], [7100.0, 4.0], [7400.0, 3.0], [7300.0, 1.0], [7200.0, 1.0], [7500.0, 5.0], [7900.0, 1.0], [7700.0, 2.0], [7800.0, 3.0], [8000.0, 1.0], [8100.0, 1.0], [8500.0, 2.0], [8300.0, 3.0], [8400.0, 4.0], [8200.0, 3.0], [8600.0, 2.0], [8800.0, 1.0], [9000.0, 4.0], [9200.0, 1.0], [9600.0, 1.0], [9500.0, 1.0], [9300.0, 2.0], [10100.0, 3.0], [10400.0, 2.0], [10700.0, 1.0], [11200.0, 1.0], [10800.0, 1.0], [11700.0, 1.0], [11800.0, 1.0], [12000.0, 1.0], [12900.0, 1.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[500.0, 6.0], [600.0, 1.0], [700.0, 1.0], [800.0, 7.0], [900.0, 6.0], [1000.0, 6.0], [1100.0, 19.0], [1200.0, 22.0], [1300.0, 12.0], [1400.0, 5.0], [1500.0, 5.0], [1600.0, 11.0], [1700.0, 4.0], [1800.0, 11.0], [1900.0, 4.0], [2000.0, 10.0], [2100.0, 4.0], [2200.0, 8.0], [2300.0, 7.0], [2400.0, 15.0], [2500.0, 13.0], [2600.0, 11.0], [2700.0, 9.0], [2800.0, 4.0], [2900.0, 7.0], [3000.0, 6.0], [3100.0, 4.0], [3200.0, 6.0], [3300.0, 5.0], [3400.0, 4.0], [3500.0, 4.0], [3600.0, 9.0], [3700.0, 1.0], [3900.0, 6.0], [4000.0, 7.0], [4200.0, 8.0], [4100.0, 3.0], [4300.0, 5.0], [4500.0, 3.0], [4600.0, 5.0], [4400.0, 2.0], [4700.0, 3.0], [4800.0, 5.0], [5100.0, 4.0], [4900.0, 6.0], [5000.0, 12.0], [5200.0, 14.0], [5300.0, 8.0], [5600.0, 6.0], [5400.0, 16.0], [5500.0, 7.0], [5700.0, 3.0], [5800.0, 7.0], [6100.0, 5.0], [5900.0, 7.0], [6000.0, 2.0], [6300.0, 3.0], [6200.0, 2.0], [6500.0, 11.0], [6400.0, 12.0], [6600.0, 7.0], [6800.0, 8.0], [6700.0, 6.0], [6900.0, 7.0], [7100.0, 7.0], [7000.0, 6.0], [7300.0, 9.0], [7200.0, 7.0], [7400.0, 1.0], [7500.0, 3.0], [7600.0, 6.0], [7800.0, 4.0], [7700.0, 7.0], [7900.0, 2.0], [8000.0, 8.0], [8100.0, 4.0], [8600.0, 8.0], [8200.0, 12.0], [8500.0, 7.0], [8700.0, 5.0], [8400.0, 2.0], [8300.0, 3.0], [9100.0, 3.0], [9000.0, 5.0], [8800.0, 11.0], [9200.0, 5.0], [8900.0, 10.0], [9700.0, 6.0], [9300.0, 3.0], [9500.0, 10.0], [9600.0, 5.0], [9400.0, 5.0], [10200.0, 4.0], [9900.0, 2.0], [9800.0, 2.0], [10100.0, 1.0], [10600.0, 6.0], [10500.0, 6.0], [10700.0, 4.0], [10400.0, 4.0], [10300.0, 1.0], [10900.0, 5.0], [11000.0, 13.0], [11100.0, 15.0], [10800.0, 6.0], [11200.0, 15.0], [11600.0, 2.0], [11500.0, 5.0], [11700.0, 2.0], [11400.0, 5.0], [11300.0, 4.0], [12100.0, 7.0], [12000.0, 6.0], [11900.0, 8.0], [11800.0, 2.0], [12200.0, 1.0], [12500.0, 5.0], [12600.0, 6.0], [12400.0, 3.0], [12700.0, 3.0], [12300.0, 1.0], [12900.0, 4.0], [13200.0, 4.0], [12800.0, 7.0], [13000.0, 6.0], [13300.0, 7.0], [13600.0, 5.0], [13400.0, 4.0], [13700.0, 6.0], [13500.0, 5.0], [13800.0, 2.0], [14100.0, 1.0], [13900.0, 4.0], [14300.0, 5.0], [14200.0, 3.0], [14000.0, 1.0], [14600.0, 4.0], [14400.0, 3.0], [14700.0, 3.0], [14800.0, 5.0], [14500.0, 2.0], [15200.0, 2.0], [14900.0, 5.0], [15300.0, 3.0], [15000.0, 7.0], [15100.0, 1.0], [15400.0, 3.0], [15500.0, 4.0], [15700.0, 3.0], [15800.0, 4.0], [15600.0, 3.0], [16000.0, 4.0], [16100.0, 2.0], [16300.0, 3.0], [16200.0, 4.0], [15900.0, 1.0], [17000.0, 7.0], [16800.0, 3.0], [16400.0, 1.0], [16600.0, 2.0], [17400.0, 1.0], [17200.0, 2.0], [18400.0, 5.0], [17600.0, 2.0], [18000.0, 3.0], [18200.0, 4.0], [17800.0, 2.0], [18600.0, 2.0], [19200.0, 1.0], [19400.0, 4.0], [19000.0, 1.0], [18800.0, 1.0], [20000.0, 2.0], [20200.0, 1.0], [20400.0, 2.0], [19600.0, 2.0], [20800.0, 2.0], [21400.0, 1.0], [21600.0, 3.0], [22000.0, 2.0], [23000.0, 3.0], [22800.0, 2.0], [17300.0, 2.0], [16500.0, 2.0], [17100.0, 3.0], [16900.0, 3.0], [16700.0, 1.0], [17700.0, 2.0], [18300.0, 2.0], [18100.0, 1.0], [17900.0, 1.0], [18500.0, 2.0], [18700.0, 2.0], [19300.0, 3.0], [19100.0, 1.0], [20300.0, 1.0], [19700.0, 1.0], [20100.0, 2.0], [20500.0, 1.0], [21300.0, 1.0], [21100.0, 4.0], [20700.0, 1.0], [22500.0, 2.0], [21700.0, 2.0], [22100.0, 3.0], [21900.0, 1.0], [23500.0, 1.0], [22700.0, 2.0], [23300.0, 2.0], [23900.0, 1.0], [24100.0, 1.0], [25500.0, 2.0], [25900.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 25900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 120.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1936.0, "series": [{"data": [[0.0, 120.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 422.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1936.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 242.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 209.44734202607813, "minX": 1.61541804E12, "maxY": 313.686012768427, "series": [{"data": [[1.6154181E12, 313.686012768427], [1.61541804E12, 209.44734202607813]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6154181E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 58.0, "minX": 1.0, "maxY": 25990.0, "series": [{"data": [[3.0, 19301.0], [4.0, 11560.0], [5.0, 16890.0], [6.0, 16045.0], [7.0, 15887.0], [8.0, 10467.0], [9.0, 17022.0], [10.0, 17007.0], [11.0, 16935.0], [12.0, 9367.0], [13.0, 18281.0], [14.0, 6712.0], [15.0, 18491.0], [16.0, 18174.0], [17.0, 18136.0], [18.0, 18149.0], [19.0, 17074.0], [20.0, 10673.0], [21.0, 14113.0], [22.0, 22227.0], [23.0, 15319.0], [24.0, 15495.0], [25.0, 13115.0], [26.0, 9222.0], [27.0, 11878.0], [28.0, 6018.0], [29.0, 10668.0], [30.0, 15044.0], [31.0, 9791.0], [33.0, 20002.0], [35.0, 16802.0], [34.0, 13992.0], [37.0, 9307.0], [36.0, 9336.0], [39.0, 20747.0], [38.0, 14623.0], [41.0, 16412.0], [40.0, 7294.0], [43.0, 6291.0], [42.0, 6219.0], [45.0, 12598.0], [44.0, 9977.0], [47.0, 8285.0], [46.0, 19112.0], [49.0, 9687.0], [48.0, 24665.0], [51.0, 10191.0], [50.0, 20550.0], [53.0, 9492.0], [52.0, 9451.0], [55.0, 12767.0], [54.0, 11630.0], [57.0, 15059.0], [59.0, 16659.0], [58.0, 18891.0], [61.0, 14650.0], [63.0, 1252.0], [62.0, 9365.0], [66.0, 1130.3333333333333], [67.0, 4937.0], [65.0, 2709.4], [64.0, 3733.2], [68.0, 6507.5], [69.0, 3069.75], [71.0, 5921.75], [70.0, 20186.0], [75.0, 4772.0], [73.0, 2978.333333333333], [72.0, 7397.666666666667], [74.0, 8764.5], [77.0, 3818.0], [76.0, 7478.666666666667], [79.0, 9655.0], [78.0, 7822.0], [81.0, 7238.0], [83.0, 9063.0], [82.0, 10932.0], [80.0, 20113.0], [87.0, 957.0], [86.0, 7634.0], [85.0, 17184.0], [84.0, 9366.0], [90.0, 4445.5], [89.0, 756.5], [88.0, 6588.5], [91.0, 10218.0], [92.0, 2015.6666666666667], [94.0, 3191.6], [95.0, 4029.25], [93.0, 16143.0], [96.0, 2387.5555555555557], [99.0, 3651.6666666666665], [98.0, 7389.5], [97.0, 16046.0], [101.0, 4254.5], [100.0, 5127.666666666667], [102.0, 6617.0], [103.0, 7778.0], [107.0, 11159.0], [106.0, 12023.0], [105.0, 10376.0], [104.0, 4633.0], [109.0, 3369.0], [108.0, 6153.5], [111.0, 16263.0], [110.0, 16420.0], [112.0, 5922.5], [114.0, 4144.333333333334], [115.0, 3494.0], [113.0, 11860.0], [118.0, 4338.666666666666], [117.0, 8489.5], [119.0, 8740.5], [116.0, 9461.0], [121.0, 8483.5], [120.0, 3455.2], [123.0, 13796.0], [122.0, 8217.0], [125.0, 4650.333333333334], [127.0, 6413.0], [126.0, 22100.0], [129.0, 2296.0], [128.0, 3246.333333333333], [130.0, 4859.8], [133.0, 5283.0], [132.0, 5467.0], [131.0, 5544.0], [134.0, 3339.0], [135.0, 7316.0], [139.0, 4309.75], [138.0, 4691.0], [142.0, 9090.0], [143.0, 10816.0], [141.0, 5645.0], [140.0, 7338.0], [136.0, 10213.0], [144.0, 11232.5], [145.0, 4315.666666666666], [147.0, 1276.5], [148.0, 1339.0], [151.0, 1398.0], [150.0, 14569.0], [149.0, 2179.0], [146.0, 8593.0], [153.0, 1397.375], [152.0, 1514.0], [159.0, 2396.0], [158.0, 5896.5], [157.0, 10473.0], [156.0, 10937.0], [155.0, 8142.0], [161.0, 3478.5555555555557], [162.0, 4293.666666666666], [160.0, 4085.0], [166.0, 8077.0], [167.0, 14373.0], [165.0, 20710.0], [164.0, 11347.0], [163.0, 10376.0], [171.0, 5902.0], [170.0, 2252.375], [169.0, 1315.0], [175.0, 14302.0], [174.0, 10541.0], [173.0, 17670.0], [172.0, 17686.0], [168.0, 14430.0], [177.0, 4190.75], [178.0, 3081.0], [182.0, 3123.0], [183.0, 11230.0], [181.0, 9529.0], [180.0, 4406.0], [179.0, 16811.0], [176.0, 15737.0], [184.0, 4398.666666666666], [185.0, 5593.5], [191.0, 1832.0], [190.0, 17193.0], [189.0, 9455.0], [188.0, 13243.0], [186.0, 10355.0], [192.0, 3773.0], [194.0, 6798.666666666666], [195.0, 4557.0], [193.0, 1898.3333333333335], [197.0, 4199.666666666666], [196.0, 3223.833333333333], [198.0, 1956.0], [199.0, 12325.0], [207.0, 6079.666666666666], [206.0, 8278.0], [205.0, 11340.0], [204.0, 5286.0], [203.0, 9344.0], [202.0, 8726.0], [201.0, 10140.0], [200.0, 2129.0], [208.0, 5707.5], [211.0, 3016.666666666667], [212.0, 4703.333333333333], [214.0, 5089.333333333333], [213.0, 9853.5], [215.0, 8972.0], [210.0, 10540.0], [209.0, 16843.0], [216.0, 6797.0], [219.0, 5770.0], [218.0, 9335.5], [223.0, 7076.5], [222.0, 12891.0], [220.0, 10938.0], [217.0, 18686.0], [225.0, 1782.0], [226.0, 1843.0], [230.0, 2145.0], [229.0, 5516.0], [228.0, 2131.0], [227.0, 2146.0], [236.0, 4121.0], [237.0, 7574.5], [235.0, 7145.0], [238.0, 1949.5], [239.0, 5328.666666666666], [234.0, 12592.0], [233.0, 4401.0], [232.0, 7902.0], [242.0, 6245.5], [241.0, 2880.0], [240.0, 2722.0], [245.0, 2079.0], [244.0, 5047.0], [251.0, 6143.0], [255.0, 4703.0], [254.0, 3162.0], [253.0, 5453.0], [252.0, 3169.0], [250.0, 11149.0], [249.0, 6865.0], [248.0, 5181.0], [268.0, 1967.0], [263.0, 4427.5], [257.0, 8350.0], [256.0, 3186.0], [259.0, 12805.0], [258.0, 11279.0], [270.0, 1987.0], [271.0, 7098.0], [267.0, 4825.0], [266.0, 5308.0], [264.0, 6590.0], [262.0, 11750.0], [261.0, 6069.0], [260.0, 7290.0], [275.0, 3022.166666666667], [276.0, 3603.333333333333], [277.0, 2630.0], [280.0, 3512.0], [281.0, 15639.0], [279.0, 3110.333333333333], [273.0, 5244.0], [272.0, 5249.0], [278.0, 9848.0], [286.0, 6432.5], [285.0, 3562.0], [284.0, 6995.0], [283.0, 15618.0], [282.0, 5300.0], [289.0, 6418.5], [292.0, 2053.0], [303.0, 3384.0], [302.0, 3445.0], [301.0, 10907.0], [300.0, 10066.0], [291.0, 14794.0], [317.0, 3067.5], [313.0, 3578.666666666667], [312.0, 4088.0], [311.0, 3724.5], [310.0, 2774.5], [309.0, 6774.0], [308.0, 6779.0], [316.0, 6514.5], [307.0, 6726.0], [306.0, 5377.0], [305.0, 6102.0], [318.0, 3615.25], [319.0, 4930.0], [315.0, 6909.0], [314.0, 6906.0], [321.0, 6454.0], [335.0, 3996.5], [334.0, 6178.0], [333.0, 2542.0], [327.0, 10450.0], [322.0, 6142.0], [320.0, 11526.0], [348.0, 4733.0], [338.0, 8697.5], [339.0, 7198.0], [342.0, 2659.5], [343.0, 3062.3333333333335], [350.0, 3703.0], [349.0, 2817.0], [347.0, 6996.0], [344.0, 10595.0], [340.0, 6230.0], [365.0, 4811.5], [354.0, 2323.3333333333335], [353.0, 5895.0], [357.0, 3706.5], [358.0, 3368.0], [363.0, 3525.0], [366.0, 3532.0], [364.0, 9540.0], [355.0, 6638.0], [362.0, 5528.0], [361.0, 6136.0], [380.0, 5524.0], [371.0, 3866.5], [370.0, 6261.0], [369.0, 3499.0], [368.0, 3496.0], [383.0, 4147.0], [382.0, 5311.0], [381.0, 6933.0], [379.0, 5329.0], [375.0, 2389.0], [374.0, 10051.0], [373.0, 3598.0], [372.0, 16664.0], [398.0, 4259.333333333333], [393.0, 4068.5], [395.0, 8210.5], [396.0, 6634.0], [399.0, 3849.0], [397.0, 11342.0], [394.0, 12842.0], [392.0, 4572.0], [391.0, 5076.0], [385.0, 2577.0], [384.0, 2547.0], [387.0, 9003.0], [386.0, 5403.0], [390.0, 4592.0], [389.0, 5675.0], [388.0, 9543.0], [415.0, 4312.0], [401.0, 3830.0], [402.0, 4312.666666666667], [400.0, 3753.6666666666665], [406.0, 8971.0], [405.0, 4863.0], [407.0, 11697.0], [411.0, 8143.0], [414.0, 3270.0], [412.0, 4969.5], [410.0, 4741.0], [409.0, 4757.0], [408.0, 4798.0], [416.0, 8992.5], [430.0, 12170.0], [427.0, 4267.0], [426.0, 10779.0], [425.0, 11608.0], [423.0, 4351.0], [422.0, 4106.0], [418.0, 3554.0], [445.0, 7666.5], [439.0, 3288.6666666666665], [442.0, 3261.0], [446.0, 5631.0], [444.0, 5154.0], [435.0, 3616.0], [434.0, 11718.0], [433.0, 10684.0], [443.0, 3458.0], [441.0, 5217.0], [440.0, 4163.0], [438.0, 15179.0], [437.0, 3239.0], [436.0, 3522.0], [460.0, 2669.0], [448.0, 5592.0], [450.0, 11581.0], [449.0, 12540.0], [456.0, 4120.0], [463.0, 2583.6666666666665], [462.0, 2075.0], [461.0, 10615.0], [459.0, 2221.0], [458.0, 7920.0], [454.0, 10543.0], [453.0, 5329.0], [452.0, 8174.0], [476.0, 12937.0], [470.0, 4034.0], [477.0, 3306.5], [474.0, 5086.0], [473.0, 10683.0], [472.0, 2494.0], [471.0, 2491.0], [465.0, 7644.0], [464.0, 8055.5], [469.0, 10410.0], [467.0, 7576.0], [466.0, 5483.0], [495.0, 9172.0], [487.0, 3795.0], [486.0, 3805.0], [485.0, 5442.0], [483.0, 3878.0], [482.0, 5444.0], [480.0, 5274.0], [497.0, 7514.5], [500.0, 3591.0], [501.0, 3951.75], [499.0, 3274.0], [502.0, 2923.5], [503.0, 3552.0], [496.0, 6220.0], [505.0, 4294.0], [508.0, 3904.857142857143], [509.0, 4332.25], [511.0, 8770.0], [510.0, 3409.0], [507.0, 7093.0], [506.0, 4460.0], [518.0, 3507.2], [520.0, 4674.0], [519.0, 2691.0], [537.0, 4959.0], [539.0, 4950.0], [538.0, 5262.0], [541.0, 5142.0], [540.0, 2746.0], [543.0, 4406.0], [528.0, 5364.0], [530.0, 7712.0], [529.0, 3032.0], [542.0, 5132.0], [524.0, 4530.5], [523.0, 3530.3333333333335], [525.0, 3856.0], [527.0, 3074.0], [512.0, 8723.0], [514.0, 5214.0], [513.0, 3377.0], [516.0, 2538.0], [515.0, 3503.0], [531.0, 4252.5], [535.0, 4717.0], [534.0, 4529.75], [532.0, 8611.0], [572.0, 4770.25], [549.0, 7304.5], [551.0, 4859.0], [550.0, 4887.0], [569.0, 4600.0], [568.0, 4002.0], [571.0, 9194.0], [570.0, 3865.0], [575.0, 4302.0], [561.0, 9787.0], [560.0, 6407.0], [574.0, 4740.0], [573.0, 4680.666666666667], [553.0, 7953.0], [552.0, 9417.0], [558.0, 10045.0], [545.0, 8817.0], [544.0, 9005.0], [557.0, 3971.0], [556.0, 3244.0], [555.0, 2795.0], [554.0, 4024.0], [562.0, 7141.333333333333], [566.0, 6317.0], [565.0, 6574.5], [564.0, 3718.0], [563.0, 2904.0], [567.0, 5031.666666666667], [587.0, 7383.0], [581.0, 3600.0], [582.0, 7720.5], [584.0, 3963.0], [585.0, 4084.0], [586.0, 3833.0], [583.0, 3741.0], [580.0, 3784.0], [579.0, 3878.0], [577.0, 2736.0], [576.0, 2785.0], [1.0, 18382.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[268.9546511627907, 6041.277906976742]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[3.0, 3918.0], [4.0, 6765.0], [5.0, 2557.0], [6.0, 4658.0], [7.0, 2402.0], [8.0, 6770.0], [9.0, 2474.0], [10.0, 5867.0], [11.0, 3478.0], [12.0, 9084.0], [13.0, 3138.0], [14.0, 9312.0], [15.0, 4023.0], [16.0, 2971.0], [17.0, 4700.0], [18.0, 2010.0], [19.0, 3112.0], [20.0, 10460.0], [21.0, 7513.0], [22.0, 3763.0], [23.0, 2317.0], [24.0, 5652.0], [25.0, 3660.0], [26.0, 7598.0], [27.0, 3870.0], [28.0, 10174.0], [29.0, 6401.0], [30.0, 6096.0], [31.0, 5263.0], [33.0, 2333.0], [35.0, 2066.0], [34.0, 2626.0], [37.0, 5174.0], [36.0, 10707.0], [39.0, 1957.0], [38.0, 2287.0], [41.0, 3011.0], [40.0, 6779.0], [43.0, 8626.0], [42.0, 9383.0], [45.0, 2440.0], [44.0, 6386.0], [47.0, 5535.0], [46.0, 2892.0], [49.0, 5045.0], [48.0, 928.0], [51.0, 9562.0], [50.0, 2840.0], [53.0, 6073.0], [52.0, 4283.0], [55.0, 6852.0], [54.0, 6336.0], [57.0, 4458.5], [59.0, 1769.0], [58.0, 3049.0], [61.0, 3178.5], [63.0, 3081.0], [62.0, 941.5], [66.0, 4380.0], [67.0, 1531.5], [65.0, 1085.4], [64.0, 1550.6], [68.0, 1911.5], [69.0, 419.0], [71.0, 762.25], [70.0, 1942.0], [75.0, 1176.3333333333333], [73.0, 2791.3333333333335], [72.0, 703.6666666666666], [74.0, 887.0], [77.0, 1723.6666666666667], [76.0, 671.3333333333333], [79.0, 9681.0], [78.0, 6793.0], [81.0, 1375.5], [83.0, 4471.0], [82.0, 2140.0], [80.0, 1982.0], [87.0, 367.5], [86.0, 2185.5], [85.0, 1873.0], [84.0, 6469.0], [90.0, 2921.5], [89.0, 490.0], [88.0, 2302.5], [91.0, 6849.0], [92.0, 3106.0], [94.0, 1178.4], [95.0, 1489.75], [93.0, 1738.0], [96.0, 731.5555555555555], [99.0, 1479.0], [98.0, 1694.0], [97.0, 1779.0], [101.0, 5599.0], [100.0, 1678.6666666666667], [102.0, 4125.0], [103.0, 8669.0], [107.0, 6917.0], [106.0, 4211.0], [105.0, 2365.0], [104.0, 9059.0], [109.0, 1788.3333333333333], [108.0, 2353.5], [111.0, 4314.0], [110.0, 2756.0], [112.0, 1405.0], [114.0, 1375.6666666666665], [115.0, 1651.3333333333333], [113.0, 4205.0], [118.0, 1784.6666666666667], [117.0, 1245.0], [119.0, 1224.0], [116.0, 6827.0], [121.0, 2212.0], [120.0, 815.4], [123.0, 7878.0], [122.0, 3709.0], [125.0, 1640.0], [127.0, 1869.5], [126.0, 941.0], [129.0, 2454.25], [128.0, 2343.333333333333], [130.0, 714.6], [133.0, 1018.3333333333334], [132.0, 1315.0], [131.0, 1438.5], [134.0, 3841.0], [135.0, 1294.0], [139.0, 1220.75], [138.0, 1135.6666666666665], [142.0, 1470.5], [143.0, 2507.0], [141.0, 7168.0], [140.0, 4969.0], [136.0, 4923.0], [144.0, 704.5], [145.0, 2230.0], [147.0, 463.0], [148.0, 456.0], [151.0, 472.0], [150.0, 4140.0], [149.0, 11723.0], [146.0, 3048.0], [153.0, 2113.125], [152.0, 742.75], [159.0, 3519.0], [158.0, 2162.5], [157.0, 3832.0], [156.0, 6681.0], [155.0, 3144.0], [161.0, 1145.3333333333333], [162.0, 2569.0], [160.0, 1676.6666666666665], [166.0, 1454.0], [167.0, 2782.0], [165.0, 937.0], [164.0, 3718.0], [163.0, 2519.0], [171.0, 1597.0], [170.0, 1250.25], [169.0, 952.0], [175.0, 2822.0], [174.0, 3246.0], [173.0, 1629.0], [172.0, 1615.0], [168.0, 1907.0], [177.0, 1425.5], [178.0, 3171.0], [182.0, 4172.5], [183.0, 3667.0], [181.0, 2552.0], [180.0, 10122.0], [179.0, 1985.0], [176.0, 2451.0], [184.0, 1458.3333333333333], [185.0, 2264.5], [191.0, 6080.0], [190.0, 3665.0], [189.0, 3905.0], [188.0, 3785.0], [186.0, 2240.0], [192.0, 1601.6], [194.0, 1694.6666666666667], [195.0, 1368.6], [193.0, 2156.3333333333335], [197.0, 3272.3333333333335], [196.0, 1285.6666666666667], [198.0, 4591.0], [199.0, 2958.0], [207.0, 1288.0], [206.0, 7454.0], [205.0, 2185.0], [204.0, 5942.0], [203.0, 2605.0], [202.0, 2480.0], [201.0, 6097.0], [200.0, 9014.0], [208.0, 1807.5], [211.0, 2027.3333333333335], [212.0, 1006.8333333333333], [214.0, 1866.6666666666667], [213.0, 1305.0], [215.0, 3602.0], [210.0, 4524.0], [209.0, 1738.0], [216.0, 2491.666666666667], [219.0, 1612.0], [218.0, 1317.0], [223.0, 2431.0], [222.0, 1730.0], [220.0, 3918.0], [217.0, 1326.0], [225.0, 1047.0], [226.0, 3743.0], [230.0, 7507.0], [229.0, 4013.0], [228.0, 8296.0], [227.0, 7293.0], [236.0, 1914.0], [237.0, 1322.5], [235.0, 1502.0], [238.0, 5333.0], [239.0, 2565.3333333333335], [234.0, 1757.0], [233.0, 10447.0], [232.0, 2359.0], [242.0, 1698.0], [241.0, 1705.8], [240.0, 3281.0], [245.0, 5048.5], [244.0, 4507.0], [251.0, 1679.5], [255.0, 4948.0], [254.0, 5369.0], [253.0, 3528.0], [252.0, 7110.0], [250.0, 4661.0], [249.0, 2673.0], [248.0, 5024.0], [268.0, 1267.0], [263.0, 1802.5], [257.0, 3819.0], [256.0, 5331.0], [259.0, 1933.0], [258.0, 3816.0], [270.0, 1274.0], [271.0, 58.0], [267.0, 4946.0], [266.0, 3400.0], [264.0, 4927.0], [262.0, 1804.0], [261.0, 3145.0], [260.0, 2557.0], [275.0, 2138.8333333333335], [276.0, 3128.0], [277.0, 3882.3333333333335], [280.0, 2354.5], [281.0, 1474.0], [279.0, 3320.0], [273.0, 3344.0], [272.0, 8477.0], [278.0, 3620.0], [286.0, 3625.0], [285.0, 4056.0], [284.0, 2384.0], [283.0, 1445.0], [282.0, 7301.0], [289.0, 3645.0], [292.0, 2195.0], [303.0, 4179.0], [302.0, 10138.0], [301.0, 1659.0], [300.0, 1982.0], [291.0, 1709.0], [317.0, 2417.5], [313.0, 2349.3333333333335], [312.0, 929.0], [311.0, 4098.5], [310.0, 1870.0], [309.0, 7571.0], [308.0, 2635.0], [316.0, 2423.5], [307.0, 3655.0], [306.0, 2756.0], [305.0, 5054.0], [318.0, 2784.25], [319.0, 3752.5], [315.0, 5120.0], [314.0, 4494.0], [321.0, 2518.5], [335.0, 5407.0], [334.0, 2612.0], [333.0, 1368.0], [327.0, 6609.0], [322.0, 2512.0], [320.0, 3813.0], [348.0, 1753.0], [338.0, 1945.5], [339.0, 8587.0], [342.0, 1374.5], [343.0, 1317.3333333333333], [350.0, 1592.25], [349.0, 1420.0], [347.0, 3670.0], [344.0, 2706.0], [340.0, 3451.0], [365.0, 1076.5], [354.0, 1653.0], [353.0, 8439.0], [357.0, 2555.5], [358.0, 1331.0], [363.0, 3075.0], [366.0, 3154.0], [364.0, 4082.0], [355.0, 3774.0], [362.0, 3227.0], [361.0, 6769.0], [380.0, 3072.0], [371.0, 2229.0], [370.0, 6747.0], [369.0, 2139.0], [368.0, 6248.0], [383.0, 2450.0], [382.0, 4213.0], [381.0, 4146.0], [379.0, 8059.0], [375.0, 3711.0], [374.0, 2005.0], [373.0, 2071.0], [372.0, 1098.0], [398.0, 2011.3333333333335], [393.0, 2189.5], [395.0, 2020.5], [396.0, 1589.0], [399.0, 1917.5], [397.0, 3283.0], [394.0, 1657.0], [392.0, 5872.0], [391.0, 3164.0], [385.0, 6394.0], [384.0, 7405.0], [387.0, 1772.0], [386.0, 8396.0], [390.0, 4096.0], [389.0, 2331.0], [388.0, 1778.0], [415.0, 2639.0], [401.0, 1458.0], [402.0, 2571.0], [400.0, 1890.3333333333333], [406.0, 2392.5], [405.0, 3243.0], [407.0, 4450.0], [411.0, 508.0], [414.0, 4239.0], [412.0, 5173.5], [410.0, 3191.0], [409.0, 2801.0], [408.0, 3218.0], [416.0, 1514.0], [430.0, 1617.0], [427.0, 2591.0], [426.0, 2224.0], [425.0, 3879.0], [423.0, 6315.0], [422.0, 4879.0], [418.0, 8582.0], [445.0, 2673.0], [439.0, 3629.6666666666665], [442.0, 1953.0], [446.0, 3142.0], [444.0, 3586.0], [435.0, 5239.0], [434.0, 3691.0], [433.0, 2210.0], [443.0, 5449.0], [441.0, 4488.0], [440.0, 2462.0], [438.0, 898.0], [437.0, 4550.0], [436.0, 2491.0], [460.0, 2377.0], [448.0, 2496.5], [450.0, 1642.0], [449.0, 1403.0], [456.0, 2426.0], [463.0, 3216.6666666666665], [462.0, 3415.6666666666665], [461.0, 1997.0], [459.0, 4719.0], [458.0, 3329.0], [454.0, 1972.0], [453.0, 3659.0], [452.0, 2744.0], [476.0, 1192.0], [470.0, 3178.0], [477.0, 3460.25], [474.0, 3790.0], [473.0, 1754.0], [472.0, 3123.0], [471.0, 4415.0], [465.0, 3926.0], [464.0, 2520.5], [469.0, 2822.0], [467.0, 2888.0], [466.0, 2145.0], [495.0, 3310.0], [487.0, 5244.0], [486.0, 3171.0], [485.0, 3832.0], [483.0, 2158.0], [482.0, 3819.0], [480.0, 2113.0], [497.0, 2448.0], [500.0, 2537.5], [501.0, 3454.75], [499.0, 2012.0], [502.0, 2281.5], [503.0, 6065.0], [496.0, 1604.0], [505.0, 1985.0], [508.0, 2083.714285714286], [509.0, 3213.25], [511.0, 4131.0], [510.0, 2508.0], [507.0, 1294.0], [506.0, 2033.0], [518.0, 3962.6], [520.0, 2093.0], [519.0, 2954.0], [537.0, 1631.0], [539.0, 1647.0], [538.0, 1744.0], [541.0, 1664.0], [540.0, 6119.0], [543.0, 4226.0], [528.0, 1665.0], [530.0, 2068.0], [529.0, 3560.0], [542.0, 1693.0], [524.0, 3381.5], [523.0, 2688.0], [525.0, 2980.0], [527.0, 5733.0], [512.0, 3472.0], [514.0, 2999.0], [513.0, 2538.0], [516.0, 4146.0], [515.0, 3628.0], [531.0, 3665.5], [535.0, 2018.0], [534.0, 2785.5], [532.0, 1987.0], [572.0, 2014.75], [549.0, 2427.0], [551.0, 3100.5], [550.0, 1759.0], [569.0, 1590.0], [568.0, 1606.0], [571.0, 1357.0], [570.0, 4787.0], [575.0, 2156.5], [561.0, 1273.0], [560.0, 3166.0], [574.0, 2725.6666666666665], [573.0, 2110.6666666666665], [553.0, 1795.0], [552.0, 2048.5], [558.0, 935.0], [545.0, 1757.0], [544.0, 1604.0], [557.0, 4534.0], [556.0, 2178.0], [555.0, 3022.0], [554.0, 3466.0], [562.0, 1861.6666666666667], [566.0, 1690.6666666666667], [565.0, 1553.0], [564.0, 3289.0], [563.0, 2239.0], [567.0, 2686.8333333333335], [587.0, 1683.0], [581.0, 3813.0], [582.0, 1785.25], [584.0, 2195.0], [585.0, 2240.5], [586.0, 4179.0], [583.0, 1619.0], [580.0, 1602.0], [579.0, 1634.0], [577.0, 5354.0], [576.0, 7988.0], [1.0, 3387.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[268.9546511627907, 2753.2918604651154]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[3.0, 23219.0], [4.0, 18325.0], [5.0, 19447.0], [6.0, 20703.0], [7.0, 18289.0], [8.0, 17237.0], [9.0, 19496.0], [10.0, 22874.0], [11.0, 20414.0], [12.0, 18451.0], [13.0, 21419.0], [14.0, 16024.0], [15.0, 22514.0], [16.0, 21145.0], [17.0, 22837.0], [18.0, 20159.0], [19.0, 20186.0], [20.0, 21133.0], [21.0, 21626.0], [22.0, 25990.0], [23.0, 17636.0], [24.0, 21147.0], [25.0, 16775.0], [26.0, 16820.0], [27.0, 15749.0], [28.0, 16193.0], [29.0, 17069.0], [30.0, 21140.0], [31.0, 15054.0], [33.0, 22335.5], [35.0, 18868.0], [34.0, 16618.0], [37.0, 14481.0], [36.0, 20044.0], [39.0, 22704.0], [38.0, 16910.0], [41.0, 19423.0], [40.0, 14073.0], [43.0, 14918.0], [42.0, 15602.0], [45.0, 15038.0], [44.0, 16363.0], [47.0, 13820.0], [46.0, 22004.0], [49.0, 14732.0], [48.0, 25593.0], [51.0, 19753.0], [50.0, 23390.0], [53.0, 15566.0], [52.0, 13734.0], [55.0, 19619.0], [54.0, 17966.0], [57.0, 19518.0], [59.0, 18429.0], [58.0, 21940.0], [61.0, 17828.5], [63.0, 4333.25], [62.0, 10307.5], [66.0, 5510.666666666667], [67.0, 6469.25], [65.0, 3795.6], [64.0, 5284.6], [68.0, 8419.5], [69.0, 3489.5], [71.0, 6684.75], [70.0, 22128.0], [75.0, 5949.0], [73.0, 5770.0], [72.0, 8101.666666666667], [74.0, 9652.0], [77.0, 5542.333333333333], [76.0, 8150.666666666667], [79.0, 19336.0], [78.0, 14615.0], [81.0, 8614.0], [83.0, 13535.0], [82.0, 13072.0], [80.0, 22095.0], [87.0, 1324.75], [86.0, 9819.5], [85.0, 19057.0], [84.0, 15835.0], [90.0, 7367.5], [89.0, 5282.333333333334], [88.0, 8891.25], [91.0, 17067.0], [92.0, 5122.0], [94.0, 4370.6], [95.0, 5519.5], [93.0, 17881.0], [96.0, 3119.4444444444443], [99.0, 5130.666666666666], [98.0, 9083.5], [97.0, 17825.0], [101.0, 9853.5], [100.0, 6806.666666666667], [102.0, 10743.0], [103.0, 16447.0], [107.0, 18076.0], [106.0, 16234.0], [105.0, 12741.0], [104.0, 13692.0], [109.0, 5157.666666666666], [108.0, 8507.5], [111.0, 20578.0], [110.0, 19176.0], [112.0, 7328.5], [114.0, 5520.333333333334], [115.0, 5145.666666666666], [113.0, 16066.0], [118.0, 6124.0], [117.0, 9734.5], [119.0, 9964.5], [116.0, 16288.0], [121.0, 10695.5], [120.0, 4270.6], [123.0, 21675.0], [122.0, 11926.0], [125.0, 6291.0], [127.0, 8282.5], [126.0, 23041.0], [124.0, 12194.0], [129.0, 4750.25], [128.0, 5589.666666666666], [130.0, 5574.6], [133.0, 6301.333333333333], [132.0, 6782.0], [131.0, 6983.0], [134.0, 7180.0], [135.0, 8610.0], [139.0, 5531.0], [138.0, 5826.666666666667], [142.0, 10561.0], [143.0, 13323.0], [141.0, 12813.0], [140.0, 12307.0], [137.0, 12203.0], [136.0, 15136.0], [144.0, 11937.0], [145.0, 6545.666666666667], [147.0, 5218.333333333334], [148.0, 6505.0], [151.0, 1870.0], [150.0, 18709.0], [149.0, 13902.0], [146.0, 11641.0], [153.0, 3510.625], [152.0, 5220.833333333333], [159.0, 5915.666666666666], [158.0, 8059.0], [157.0, 14306.0], [156.0, 17618.0], [155.0, 11286.0], [154.0, 12185.0], [161.0, 4624.222222222223], [162.0, 6863.0], [160.0, 5761.833333333333], [166.0, 9531.0], [167.0, 17156.0], [165.0, 21648.0], [164.0, 15065.0], [163.0, 12895.0], [171.0, 7499.0], [170.0, 3503.0], [169.0, 6744.5], [175.0, 17124.0], [174.0, 13788.0], [173.0, 19299.0], [172.0, 19301.0], [168.0, 16337.0], [177.0, 5616.25], [178.0, 6252.5], [182.0, 7295.5], [183.0, 14898.0], [181.0, 12082.0], [180.0, 14528.0], [179.0, 18797.0], [176.0, 18188.0], [184.0, 5857.666666666666], [185.0, 7858.5], [191.0, 7912.0], [190.0, 20858.0], [189.0, 13360.0], [188.0, 17028.0], [187.0, 11300.0], [186.0, 12595.0], [192.0, 5374.6], [194.0, 8493.333333333332], [195.0, 5925.8], [193.0, 4055.166666666667], [197.0, 7472.333333333333], [196.0, 4509.666666666666], [198.0, 6547.5], [199.0, 15283.0], [207.0, 7368.0], [206.0, 15732.0], [205.0, 13525.0], [204.0, 11228.0], [203.0, 11949.0], [202.0, 11206.0], [201.0, 16237.0], [200.0, 11143.0], [208.0, 7516.0], [211.0, 5044.333333333334], [212.0, 5710.166666666666], [214.0, 6956.0], [215.0, 8557.5], [213.0, 8948.333333333332], [210.0, 15064.0], [209.0, 18581.0], [216.0, 9288.666666666668], [219.0, 7382.5], [218.0, 10652.5], [223.0, 9508.0], [222.0, 12973.0], [220.0, 14856.0], [217.0, 20012.0], [225.0, 7396.5], [226.0, 5586.333333333334], [231.0, 11950.0], [230.0, 9652.0], [229.0, 9529.0], [228.0, 10427.0], [227.0, 9439.0], [224.0, 11264.0], [236.0, 6035.0], [237.0, 8897.5], [235.0, 8647.0], [238.0, 7283.5], [239.0, 7894.333333333333], [234.0, 14349.0], [233.0, 14849.0], [232.0, 10262.0], [242.0, 7943.5], [241.0, 4586.0], [240.0, 6003.5], [245.0, 7127.5], [247.0, 11926.0], [246.0, 11241.0], [244.0, 9555.0], [243.0, 11207.0], [251.0, 7823.0], [255.0, 9651.0], [254.0, 8531.0], [253.0, 8982.0], [252.0, 10280.0], [250.0, 15810.0], [249.0, 9539.0], [248.0, 10205.0], [271.0, 9132.5], [263.0, 6230.5], [257.0, 12169.0], [256.0, 8518.0], [259.0, 14738.0], [258.0, 15096.0], [268.0, 7149.0], [270.0, 8479.333333333334], [267.0, 9771.0], [266.0, 8708.0], [265.0, 11920.0], [264.0, 11517.0], [262.0, 13554.0], [261.0, 9214.0], [260.0, 9847.0], [275.0, 5161.166666666666], [276.0, 6731.333333333334], [277.0, 6513.0], [280.0, 5867.0], [281.0, 17113.0], [279.0, 6430.333333333334], [273.0, 8588.0], [272.0, 13726.0], [278.0, 13468.0], [286.0, 10057.5], [285.0, 7618.0], [284.0, 9379.0], [283.0, 17063.0], [282.0, 12601.0], [302.0, 13583.0], [289.0, 10064.0], [292.0, 7742.0], [293.0, 11188.0], [295.0, 11214.0], [288.0, 11160.0], [294.0, 11200.0], [303.0, 7563.0], [301.0, 12566.0], [300.0, 12048.0], [291.0, 16503.0], [290.0, 11181.0], [299.0, 7780.0], [298.0, 7767.0], [297.0, 7722.0], [296.0, 11227.0], [317.0, 5485.0], [313.0, 5928.666666666666], [312.0, 6177.5], [311.0, 7824.0], [310.0, 4644.5], [309.0, 14345.0], [308.0, 9415.0], [316.0, 8938.5], [307.0, 10382.0], [306.0, 8133.0], [305.0, 11156.0], [304.0, 7844.0], [318.0, 6399.5], [319.0, 8682.5], [315.0, 12029.0], [314.0, 11400.0], [334.0, 8790.0], [321.0, 8973.0], [320.0, 15339.0], [323.0, 8959.0], [322.0, 8654.0], [327.0, 17059.0], [326.0, 8986.0], [325.0, 8942.0], [324.0, 8973.0], [335.0, 9404.0], [333.0, 6534.0], [332.0, 11009.0], [331.0, 6668.0], [330.0, 8888.0], [329.0, 11039.0], [328.0, 11026.0], [348.0, 6486.5], [338.0, 10644.0], [337.0, 10907.0], [336.0, 10867.0], [339.0, 15785.0], [342.0, 4863.333333333333], [341.0, 6481.0], [340.0, 9681.0], [343.0, 4911.0], [350.0, 5295.25], [349.0, 7514.5], [351.0, 7376.0], [345.0, 8267.0], [344.0, 13301.0], [347.0, 10667.0], [346.0, 10885.0], [365.0, 6360.333333333333], [354.0, 3976.6666666666665], [359.0, 7327.0], [353.0, 14334.0], [352.0, 9430.0], [357.0, 6262.0], [356.0, 7317.0], [358.0, 6012.0], [363.0, 6600.0], [367.0, 8331.0], [366.0, 6686.0], [364.0, 13622.0], [355.0, 8896.5], [362.0, 8756.0], [361.0, 12905.0], [360.0, 7296.0], [382.0, 9524.0], [371.0, 6096.0], [370.0, 13008.0], [369.0, 5639.0], [368.0, 9744.0], [375.0, 6100.0], [374.0, 12057.0], [373.0, 5669.0], [372.0, 17762.0], [380.0, 8596.0], [383.0, 6598.0], [381.0, 11079.0], [379.0, 13388.0], [378.0, 6427.0], [377.0, 6415.0], [376.0, 8236.0], [398.0, 6271.0], [393.0, 6258.0], [395.0, 10231.0], [396.0, 8223.5], [399.0, 7549.666666666667], [397.0, 14625.0], [394.0, 14499.0], [392.0, 10444.0], [391.0, 8240.0], [385.0, 8972.0], [384.0, 9952.0], [387.0, 10775.0], [386.0, 13799.0], [390.0, 8688.0], [389.0, 8006.0], [388.0, 11321.0], [415.0, 6951.0], [401.0, 6294.333333333333], [402.0, 6883.666666666667], [403.0, 11199.0], [400.0, 6295.0], [406.0, 11363.5], [405.0, 8249.0], [407.0, 16147.0], [411.0, 8651.0], [414.0, 7509.0], [412.0, 10143.5], [410.0, 7932.0], [409.0, 7558.0], [408.0, 8016.0], [430.0, 13787.0], [416.0, 10506.5], [417.0, 8253.0], [419.0, 11049.0], [418.0, 12136.0], [431.0, 11100.0], [429.0, 5277.0], [428.0, 5388.0], [427.0, 6858.0], [426.0, 13003.0], [425.0, 10469.5], [423.0, 10666.0], [422.0, 8986.0], [421.0, 11090.0], [420.0, 11077.0], [447.0, 11416.0], [439.0, 6918.666666666667], [438.0, 16077.0], [437.0, 7789.0], [436.0, 6013.0], [442.0, 5215.5], [445.0, 10340.0], [446.0, 8773.0], [444.0, 8740.0], [435.0, 8855.0], [434.0, 15409.0], [433.0, 12894.0], [432.0, 11085.0], [443.0, 8907.0], [441.0, 9705.0], [440.0, 6625.0], [463.0, 5800.5], [448.0, 8089.0], [449.0, 13943.0], [451.0, 5270.0], [450.0, 13223.0], [455.0, 11423.0], [454.0, 12515.0], [453.0, 8988.0], [452.0, 10919.0], [456.0, 6546.0], [460.0, 5046.5], [462.0, 5490.666666666667], [461.0, 12612.0], [459.0, 6940.0], [458.0, 11249.0], [457.0, 4881.0], [479.0, 5263.0], [470.0, 6329.5], [469.0, 13233.0], [468.0, 5468.0], [477.0, 6766.75], [478.0, 6375.0], [476.0, 14129.0], [467.0, 10464.0], [466.0, 7628.0], [465.0, 11571.0], [464.0, 10576.5], [471.0, 6906.0], [475.0, 5081.0], [474.0, 8876.0], [473.0, 12437.0], [472.0, 5617.0], [494.0, 5278.0], [495.0, 12482.0], [493.0, 9577.5], [483.0, 6036.0], [482.0, 9263.0], [481.0, 5285.0], [480.0, 7387.0], [491.0, 9556.0], [490.0, 9541.0], [489.0, 5984.0], [488.0, 9494.0], [487.0, 9039.0], [486.0, 6976.0], [485.0, 9274.0], [484.0, 5450.0], [497.0, 9963.0], [500.0, 6128.75], [501.0, 6929.4], [499.0, 5302.0], [498.0, 9654.0], [502.0, 5205.0], [503.0, 9617.0], [496.0, 7824.0], [505.0, 8602.5], [508.0, 5856.555555555556], [509.0, 6915.0], [511.0, 12901.0], [504.0, 10883.0], [510.0, 5918.0], [507.0, 8291.5], [506.0, 7883.5], [516.0, 5876.5], [518.0, 7470.0], [520.0, 5810.5], [522.0, 11786.0], [521.0, 11789.0], [519.0, 6031.0], [524.0, 7140.333333333333], [523.0, 5826.5], [525.0, 6836.0], [527.0, 8807.0], [515.0, 7131.0], [514.0, 8214.0], [513.0, 5915.0], [512.0, 12195.0], [526.0, 5555.0], [531.0, 7918.5], [530.0, 9781.0], [529.0, 6592.0], [528.0, 7029.0], [533.0, 10743.0], [532.0, 10598.0], [541.0, 5153.0], [540.0, 8865.0], [539.0, 6597.0], [538.0, 7006.0], [537.0, 6590.0], [536.0, 4577.0], [542.0, 6825.0], [543.0, 8632.0], [535.0, 6735.0], [534.0, 7315.5], [549.0, 9732.0], [551.0, 7960.0], [550.0, 6646.0], [568.0, 5608.0], [570.0, 8652.0], [569.0, 6190.0], [572.0, 6722.4], [571.0, 10551.0], [573.0, 7886.4], [575.0, 6324.0], [561.0, 11060.0], [560.0, 9573.0], [574.0, 6949.0], [553.0, 9748.0], [552.0, 11466.0], [555.0, 6033.0], [554.0, 7490.0], [557.0, 8506.0], [556.0, 5422.0], [558.0, 7857.5], [559.0, 11511.0], [544.0, 10610.0], [546.0, 10663.0], [545.0, 10574.0], [548.0, 5221.0], [547.0, 5208.0], [562.0, 9003.0], [566.0, 8008.333333333333], [567.0, 7718.666666666667], [565.0, 8128.0], [564.0, 7007.0], [563.0, 5143.0], [587.0, 9066.0], [581.0, 7505.666666666667], [582.0, 9145.6], [584.0, 6158.0], [585.0, 6325.0], [586.0, 8012.0], [583.0, 5361.0], [580.0, 5386.0], [579.0, 5512.0], [578.0, 10572.0], [577.0, 8090.0], [576.0, 10773.0], [1.0, 21769.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[286.6979999999997, 8762.622999999998]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 587.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2942.1666666666665, "minX": 1.61541804E12, "maxY": 1235846.6833333333, "series": [{"data": [[1.6154181E12, 1235846.6833333333], [1.61541804E12, 643719.5666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6154181E12, 4790.866666666667], [1.61541804E12, 2942.1666666666665]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6154181E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1251.3163972286368, "minX": 1.61541804E12, "maxY": 11284.404463040455, "series": [{"data": [[1.6154181E12, 8220.132987910196], [1.61541804E12, 1551.7508896797146]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.6154181E12, 4276.372365339577], [1.61541804E12, 1251.3163972286368]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.6154181E12, 11284.404463040455], [1.61541804E12, 2373.5159010600723]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6154181E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 800.3533568904594, "minX": 1.61541804E12, "maxY": 7416.008635578581, "series": [{"data": [[1.6154181E12, 7416.008635578581], [1.61541804E12, 1449.1921708185046]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.6154181E12, 4276.372365339577], [1.61541804E12, 1251.2979214780592]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.6154181E12, 2986.5034867503473], [1.61541804E12, 800.3533568904594]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6154181E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 371.5441696113074, "minX": 1.61541804E12, "maxY": 7003.176165803108, "series": [{"data": [[1.6154181E12, 7003.176165803108], [1.61541804E12, 1173.156583629894]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.6154181E12, 1754.524590163935], [1.61541804E12, 536.6974595842954]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.6154181E12, 1520.8312412831206], [1.61541804E12, 371.5441696113074]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6154181E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 55.0, "minX": 1.61541804E12, "maxY": 25990.0, "series": [{"data": [[1.6154181E12, 25990.0], [1.61541804E12, 7156.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6154181E12, 16664.0], [1.61541804E12, 3056.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6154181E12, 22705.899999999998], [1.61541804E12, 5019.3]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6154181E12, 18626.0], [1.61541804E12, 3795.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6154181E12, 1480.0], [1.61541804E12, 55.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6154181E12, 6865.0], [1.61541804E12, 1372.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6154181E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 73.0, "minX": 2.0, "maxY": 20625.5, "series": [{"data": [[2.0, 14942.5], [34.0, 73.0], [57.0, 13941.0], [58.0, 15049.0], [61.0, 13416.5], [64.0, 7848.0], [67.0, 15733.5], [4.0, 11368.0], [68.0, 9059.0], [75.0, 4145.0], [79.0, 1724.0], [78.0, 2884.0], [84.0, 3816.0], [86.0, 10587.0], [89.0, 2709.0], [88.0, 5754.0], [91.0, 5362.5], [95.0, 3433.0], [92.0, 9042.0], [99.0, 7674.0], [97.0, 12826.0], [6.0, 20625.5], [102.0, 779.0], [103.0, 4108.5], [104.0, 1584.5], [111.0, 1562.0], [108.0, 7186.0], [116.0, 1142.5], [119.0, 4088.0], [127.0, 733.0], [140.0, 1150.5], [16.0, 17129.5], [30.0, 17355.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[58.0, 19847.5], [61.0, 12176.0], [64.0, 7376.0], [67.0, 13354.0], [4.0, 19850.0], [68.0, 11096.0], [75.0, 5596.0], [84.0, 5021.0], [86.0, 11964.0], [88.0, 5859.0], [91.0, 6739.0], [95.0, 5221.0], [92.0, 8986.0], [99.0, 11100.0], [97.0, 13230.0], [103.0, 5434.0], [111.0, 4543.0], [108.0, 8884.0], [119.0, 6512.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 140.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 11693.0, "series": [{"data": [[2.0, 9157.0], [34.0, 73.0], [57.0, 8320.0], [58.0, 8439.0], [61.0, 7060.0], [64.0, 5497.0], [67.0, 7928.0], [4.0, 8006.0], [68.0, 5178.0], [75.0, 3048.0], [79.0, 1613.0], [78.0, 2429.0], [84.0, 3011.0], [86.0, 5505.0], [89.0, 2234.0], [88.0, 3668.5], [91.0, 3703.0], [95.0, 2440.0], [92.0, 6609.0], [99.0, 4634.5], [97.0, 7532.0], [6.0, 11693.0], [102.0, 412.0], [103.0, 3076.5], [104.0, 1191.5], [111.0, 1367.0], [108.0, 4710.0], [116.0, 688.0], [119.0, 3492.0], [127.0, 485.0], [140.0, 959.0], [16.0, 9217.5], [30.0, 9690.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[58.0, 880.0], [61.0, 0.0], [64.0, 0.0], [67.0, 0.0], [4.0, 1569.0], [68.0, 0.0], [75.0, 0.0], [84.0, 0.0], [86.0, 0.0], [88.0, 0.0], [91.0, 0.0], [95.0, 0.0], [92.0, 0.0], [99.0, 0.0], [97.0, 0.0], [103.0, 0.0], [111.0, 0.0], [108.0, 0.0], [119.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 140.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 17.6, "minX": 1.61541804E12, "maxY": 27.733333333333334, "series": [{"data": [[1.6154181E12, 17.6], [1.61541804E12, 27.733333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6154181E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.61541804E12, "maxY": 17.7, "series": [{"data": [[1.6154181E12, 1.4], [1.61541804E12, 0.1]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.6154181E12, 17.7], [1.61541804E12, 9.266666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6154181E12, 1.0666666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.6154181E12, 7.116666666666666], [1.61541804E12, 7.216666666666667]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.6154181E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.6154181E12, 1.4], [1.61541804E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6154181E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.61541804E12, "maxY": 8.85, "series": [{"data": [[1.6154181E12, 8.85], [1.61541804E12, 4.633333333333334]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.6154181E12, 3.1], [1.61541804E12, 0.08333333333333333]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.6154181E12, 7.116666666666666], [1.61541804E12, 7.216666666666667]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.6154181E12, 0.8], [1.61541804E12, 0.05]], "isOverall": false, "label": "HTTP Request-1-failure", "isController": false}, {"data": [[1.6154181E12, 8.85], [1.61541804E12, 4.633333333333334]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6154181E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.61541804E12, "maxY": 24.816666666666666, "series": [{"data": [[1.6154181E12, 24.816666666666666], [1.61541804E12, 16.483333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6154181E12, 3.9], [1.61541804E12, 0.13333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6154181E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

